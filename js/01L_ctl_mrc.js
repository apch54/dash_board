// Generated by CoffeeScript 1.10.0
(function() {
  var Raccourcis, app, sign,
    slice = [].slice,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  app = angular.module("app_mrc", ['ngAnimate', 'ui.bootstrap', 'ngMdIcons', 'ngTouch', 'ngClipboard', 'duScroll']);


  /*
  fc 2015-08-01
   */

  app.controller("ctl_mrc", function($scope, $document, $location, $anchorScroll, $http, $uibModal, $window, $log, $timeout, ngClipboard, $sce) {
    var $$, $_debut, MA, ajx_fl, ancienBut, bd_glob_dddr, bd_tous_les_bilans, bilan_exists, cursor_waiting_for, date_is_ok, dte_last_report, ess, get_bd_global_dvdp, get_bd_jeux_regies_campagnes, handle_bd_gain_0, handle_bd_variation, idx_lst, init_date, is_cmp_in_bd_glob, marge_inf_10_exists, msg, partial_raz, present_file, raz_bd_empty, show, show_err, shws, stg, t, u, url_logs, url_param, url_time, vu_marge_10;
    app.value('duScrollDuration', 2000);
    $$ = $scope;
    present_file = '01';
    $$.animationsEnabled = true;
    ajx_fl = "php/04_bd_mrc.php";
    $$.date_to_string = date_to_string;
    $$.tri_levier = {
      col: 'Marge',
      desc: true
    };
    $$.tri_levier_regie = {
      col: 'Marge',
      desc: true
    };
    $$.tri_modifs = {
      col: 'bilan_mrg',
      desc: true
    };
    $$.tri_bid = {
      col: 'bilan_mrg',
      desc: true
    };
    $$.pourcentage = pourcentage;
    $$.sign = sign;
    $$.chk_aff_graph_lgn = false;
    $$.chk_aff_var_rel = false;
    $$.chk_aff_tableau = true;
    $$.chk_aff_gain_0 = false;
    $$.chk_aff_levier = false;
    $$.chk_aff_graph_jeux_regies = true;
    $$.chk_aff_graph_campagnes = true;
    $$.chk_aff_bilan = true;
    $$.gbd_filtree = [];
    $$.bd_glob = ['t0'];
    bd_glob_dddr = [];
    bd_tous_les_bilans = [
      {
        v_ou_p: '0',
        bd: [],
        dddp: '1954-07-28'
      }
    ];
    $$.gbd_bilan = [];
    $$.bd_levier = [];
    $$.bd_regie_jeu = [];
    $$.bd_variation = [];
    $$.bd_var_abs = [];
    $$.bd_var_rel = [];
    $$.nb_var = 4;
    $$.bd_gain_0 = [];
    $$.limit_var = 7;
    $$.var_nbj = 7;
    $$.title_variation = '7 derniers j';
    $$.fRenta = Infinity;
    $$.rdio_dv = 'v';
    $$.show_bse_m = false;
    $$.stg_erreur = '';
    $$.TimeOffset = new Date().getTimezoneOffset() * 60 * 1000;
    $$.dte_select = "j";
    $$.TJ_exists = false;
    $$.dddr = '1954-07-28';
    $$.day_prd = 15;
    $$.dddp = '1954-07-28';
    ancienBut = 'date _0';
    $_debut = true;
    $$.bd_empty = true;
    $$.show_menu = true;
    vu_marge_10 = true;
    $$.marge_inf_10 = false;
    $$.height_blank_menu = '11em';
    $$.class_cursor = 'cursor_auto';
    cursor_waiting_for = '';
    ngClipboard = ngClipboard.ngClipboard;
    $$.show_hidden_table = false;
    $$.graph_lgn_height = '700px';
    $$.mdf = {
      bd: [],
      bd_aff: [],
      bd_reduits: [],
      flt_IdCamp: '',
      flt: {
        IdCamp: ''
      },
      show: false,
      show_one_cmp: false
    };
    $$.bid = {
      bd: [],
      bd_aff: [],
      bd_reduits: [],
      flt_IdCamp: '',
      flt: {
        IdCamp: ''
      },
      show: false
    };
    $$.logs = {
      show: false,
      chk: {
        bilan: false,
        var_abs: false,
        var_rel: false,
        table: false,
        table_flt: false,
        pie: false,
        xy: false,
        levier: false,
        gain0: false,
        cvr: false,
        crv_cmp: false,
        cvr_red: false,
        bid: false,
        bid_cmp: false,
        bid_red: false
      }
    };
    $$.board = {
      xy: false,
      bilan: false
    };
    $$.test = '';
    ess = {
      username: 'fc'
    };
    MA = window.angular.module('app_mrc');
    $$.M_help = MA.help;
    shws = MA.shws;
    $$.show = show = function() {
      var x;
      x = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return shws.apply(null, slice.call(x).concat([present_file]));
    };
    show_err = MA.show_err;
    $$.wait_ms = wait_ms;
    $$.pgs_bar2 = MA.pgs_bar2;
    $$.pie_colors = MA.pie_colors;
    $$.coul = MA.coul;
    $$.coul_2 = MA.coul_2;
    $$.pgs_bar2.start();
    $$.pgs_bar2.reset(5000, 'light');
    $('[data-toggle="popover"]').popover();
    url_param = get_url_param('parametre');
    if (url_param === 'dv' || url_param === 'v' || url_param === 'dp' || url_param === 'p' || url_param === 'w' || url_param === 'm') {
      switch (url_param) {
        case 'dv':
        case 'v':
          t = 'v';
          break;
        case 'dp':
        case 'p':
          t = 'p';
          break;
        case 'w':
          t = 'w';
          break;
        case 'm':
          t = 'm';
      }
      $$.rdio_dv = t;
    } else if (url_param == null) {
      $$.rdio_dv = 'v';
    } else {
      $$.open_modal({
        title: "La base  - " + url_param + " -  est inexistante.",
        body: 'La base par défaut est dv',
        job: 'Dv'
      });
      $$.rdio_dv = 'v';
    }
    url_time = get_url_param('time');
    if (url_time != null) {
      u = Math.round(parseInt(url_time));
      msg = "Pour tracer une courbe je préfère disposer d'au moins deux points; merci.";
      if (u > 1) {
        $$.day_prd = $$.dddp = u;
      } else {
        $$.open_modal({
          title: "Delai graphique xy",
          body: msg,
          job: "15j"
        });
      }
    }
    url_logs = get_url_param('logs');
    if (url_logs != null) {
      if (url_logs === 'on') {
        $$.logs.show = true;
      }
    }

    /* LIGHT TODO effacer le 23-07
    get_url_bilan = ->
        url_bln = get_url_param 'bilan'
        if (url_bln?) and (url_bln is 'on') then  return on
        else return off
    
     * mémorisation de la donnée URL
    $$.chk_aff_bilan = $$.board.bilan = get_url_bilan()
    
     * ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ *
     * Affichage du bilan
     * yon : yes or no : $$.ckk_aff_bilan
    $$.aff_bilan = (yon) ->
        ds_l_ordre = ->
            show 'ici'
            yield $$.get_bilan()
            show 1
            yield $$.board.bilan = on
            show 2
            yield 'terminé'
        if yon
            #foo = ds_l_ordre()
            #aa= foo.next()
            #ab= foo.next()
            #abc=foo.next(); show abc
            $$.get_bilan()
            $$.bazinga_scroll("id_bilan", 105)
        else
            $$.board.bilan  = off
            $$.board.xy = $$.chk_aff_xy  = off
    
     * ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ *
     * lecture du param xy de l'URL
     * pour activer la l'aff de xy elle doit être sur on
     * ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ *
    
    get_url_xy = ->
        if not $$.board.bilan then return off
        url_xy= get_url_param('xy')
        if  (url_xy?) and (url_xy is 'on')
            $$.chk_aff_graph_lgn = on
            url_xy= on
            $$.board.xy = on
            return on
        else
            $$.chk_aff_graph_lgn = off
            $$.board.xy = off
            return off
    
    #on prend la valeur xy de l'URL
    $$.chk_aff_xy =  $$.board.xy = get_url_xy()
    
     * ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ *
    
    $$.aff_graph_lgn = (yon)-># yon : aff xy or not
    
     * dans ce cas  on mémorise la volontée de montrer le xy
        if yon and $$.board.bilan
            $$.board.xy = on
            #console.log $$.board.xy,'chk'
            #$$.change_dv()
            $$.$broadcast 'broadcast_to_xy', 'bd var ok'
    
            val_to_broadcast =
                date_0    : $$.date_0
                date_2    : $$.date_2
                dddr      : $$.dddr #date du dernier rapport
                dte_select: $$.dte_select
                rdio_dv   : $$.rdio_dv
                show_bse_m: $$.show_bse_m
                dddp      : $$.dddp # valeur du début de période
    
            $$.$broadcast 'broadcast_to_xy', val_to_broadcast
            $$.menu_on_off('no-visible')
    
         * on mémorise le souhaît de montrer xy ds ts les cas
        #else if (yon is yes) and ($$.board.xy is no) then $$.board.xy = yes
         * ici on revient au cas de départ xy =off
        else
            $$.chk_aff_xy = $$.board.xy = off
            $$.$apply()
     */
    $$.titre_menu_base = function() {
      var ref, ref1;
      if ((ref = $$.rdio_dv) === 'v' || ref === 'p') {
        return "d" + $$.rdio_dv;
      } else if ((ref1 = $$.rdio_dv) === 'w' || ref1 === 'm') {
        return $$.rdio_dv;
      }
    };
    $$.set_ifm_height = function(h, h_modif) {
      if (h_modif == null) {
        h_modif = '';
      }
      return $('#graph_lgn').css({
        height: h + h_modif
      });
    };
    $$.set_ifm_height($$.graph_lgn_height);

    /* LIGHT TODO effacer le 25-07
    
     * ~¨¨¨¨¨¨¨¨¨¨¨¨¨¨~¨¨¨¨¨¨¨¨¨¨¨¨~¨¨¨¨¨¨¨¨¨¨¨¨~¨¨¨¨¨¨¨¨¨¨¨¨¨¨~
     * affichage des modifs (conçu pour une hauteur de graph de 670)
     * ~¨¨¨¨¨¨¨¨¨¨¨¨¨¨~¨¨¨¨¨¨¨¨¨¨¨¨~¨¨¨¨¨¨¨¨¨¨¨¨~¨¨¨¨¨¨¨¨¨¨¨¨¨¨~
    
     * réagit au bouton pour l'affichage du tableau des modifs
    $$.aff_modifs = () ->
        $$.mdf.flt.IdCamp = ''
        $$.mdf.show= !$$.mdf.show
    
    $$.aff_bid = () ->
        $$.mdf.flt.IdCamp = ''
        $$.bid.show=  not $$.bid.show
     */
    is_cmp_in_bd_glob = function(id) {
      var b, k, len, ref;
      id.toString;
      ref = $$.bd_glob;
      for (k = 0, len = ref.length; k < len; k++) {
        b = ref[k];
        if (id.toString() === b.idCamp) {
          return true;
          break;
        }
      }
      return false;
    };
    $$.is_cmp_in_bd_modifs_bid = function(id, bd) {
      var b, k, len;
      id.toString;
      for (k = 0, len = bd.length; k < len; k++) {
        b = bd[k];
        if (id.toString() === b.IdCamp.toString()) {
          return true;
          break;
        }
      }
      return false;
    };

    /* LIGHT TODO effacer le 24-07
    $$.aff_mdf_bid_loader = (mdf, mdf_or_bid) ->
        mdf.mdf_or_bid = mdf_or_bid
        mdf.shw_id ='loader'
    
     * ~¨¨¨¨¨¨¨¨¨¨¨¨¨¨~¨¨¨¨¨¨¨¨¨¨¨¨~¨¨¨¨¨¨¨¨¨¨¨¨~¨¨¨¨¨¨¨¨¨¨¨¨¨¨~
     * clic sur l'Idcamp dans le TALEAU permet d'afficher
     * la courbe de la camp en modif
     * Concerne à la fois les mdf et les bid
     * ~¨¨¨¨¨¨¨¨¨¨¨¨¨¨~¨¨¨¨¨¨¨¨¨¨¨¨~¨¨¨¨¨¨¨¨¨¨¨¨~¨¨¨¨¨¨¨¨¨¨¨¨¨¨~
    $$.aff_xy_mdf_bid = (mdf, mdf_or_bid='mdf') ->
    
        mdf.shw_id ='loader' #on affiche le loader
        #$$.set_cursor 'raz_cursor'
    
        #$$.menu_on_off('no visible') # menu principal réduit
    
        mdf.mdf_or_bid = mdf_or_bid
         * oth is the other mdf or bid
        if mdf_or_bid is 'mdf'
            fst = $$.mdf # fst : première base affichée
            oth = $$.bid # l'autre
        else
            fst = $$.bid
            oth = $$.mdf
        oth.show = off # caher l'autre
    
         * chargement de l'autre base si nécessaire
         * et de la base réduite aussi (faits ds 20_graph)
        msg ={nature: 'get autre modifs',info: mdf, base : mdf_or_bid }
        if oth.bd.length < 1 then $$.$broadcast 'broadcast_to_xy',msg
         * la campagne est elle ds l'autre base?
         * si oui on la prépare
        if $$.is_cmp_in_bd_modifs_bid(mdf.IdCamp, oth.bd)
            oth.bd_aff = $$.bid.bd_reduits
            oth.flt.IdCamp = mdf.IdCamp
    
        fst.bd_aff = fst.bd_reduits
        if mdf_or_bid is 'mdf' then $$.chk_mdf_complet = false else $$.chk_bid_complet = false
    
        mdf.shw_id ='btn' #on affiche le bouton en attendant
    
        #place l'affichage au bon endroit
        if mdf_or_bid is 'mdf' then $$.bazinga_scroll("id_modifs", 55)
        else $$.bazinga_scroll("id_bid", 55)
    
     * --------------------
     * appui sur le bouton  figurant sous id-camp
     * voir
    $$.voir_mdf_ou_bid = (mdf, mdf_or_bid='mdf')->
        if mdf_or_bid is 'mdf'
            fst = $$.mdf #first bd aff
            oth = $$.bid
        else
            fst = $$.bid
            oth = $$.mdf
    
         * toutes les bases réduites
        $$.mdf.bd_aff = $$.mdf.bd_reduits ; $$.chk_mdf_complet = false
        $$.bid.bd_aff = $$.bid.bd_reduits ; $$.chk_bid_complet = false
    
         * filtre le tableau initial
        fst.flt.IdCamp = mdf.IdCamp
        $$.mdf.show_one_cmp = true
    
        #affichage du bd glob que sur l'id sélectionné
        if is_cmp_in_bd_glob(mdf.IdCamp) then $$.filter_glob_by_id(mdf.IdCamp)
        #affichage de la courbe de la campagne
        msg = {nature: 'modifs to display',info: mdf}
    
         * on charge l'autre base
        $$.$broadcast 'broadcast_to_xy', msg
         * affichage de l'autre tableau
        oth.show = on if $$.is_cmp_in_bd_modifs_bid(mdf.IdCamp, oth.bd)
    
        $$.bazinga_scroll("id_titre_tableau",70)
        mdf.shw_id ='no' #on n'affiche plus le bouton
    
     * --------------------
     * prend en compte l'affichage compact des modifs ou le retour
    $$.set_flt_mdf = (mdf) ->
    
         * send info to xy to display (01_graph.php)
        $$.chk_mdf_complet = not $$.chk_mdf_complet
        if $$.chk_mdf_complet
            $$.mdf.flt.IdCamp = mdf.IdCamp
            $$.mdf.bd_aff  = $$.mdf.bd
        else
            $$.mdf.bd_aff  = $$.mdf.bd_reduits
            $$.mdf.flt.IdCamp = ''
    
     * prend en compte l'affichage compact des modifs ou le retour
    $$.set_flt_bid = (bid) ->
        $$.chk_bid_complet = not $$.chk_bid_complet
        if $$.chk_bid_complet
            $$.bid.flt.IdCamp = bid.IdCamp
            $$.bid.bd_aff  = $$.bid.bd
        else
            $$.bid.bd_aff  = $$.bid.bd_reduits
            $$.bid.flt.IdCamp = ''
    
     * --------------------
    #détermination de l'icon à afficher en fonction de val
     * tableau modifs
    $$.aff_icon_modifs = (val) ->
        if not typeof( val) is 'number' then return 'error'
        else if isNaN( val) then return 'error'
        else if val > Number.MAX_VALUE then return 'error'
        else if val < -Number.MAX_VALUE then return 'error'
        else if val > 0 then  return 'up'
        else if val < 0 then return 'down'
        else return 'error'
    
     * permet de supprimer le '%' derrière l'icone exclamation
    $$.aff_pour_cent = (val) ->
        if $$.aff_icon_modifs(val) is 'error' then return ''
        else return '%'
    
     * réagit au clic de du chk-box 'complet'
    $$.chk_mdf_click = (apply_it = false) ->
        $$.mdf.flt.IdCamp = ''
        if $$.chk_mdf_complet then $$.mdf.bd_aff  = $$.mdf.bd
        else                       $$.mdf.bd_aff  = $$.mdf.bd_reduits
        if apply_it then $$.$apply()
    
     * réduit la ligne des modifs à une ligne
     * sur action de la chk box
    $$.clic_reduce_mdf  = (mdf,chk ) ->
        l = mdf.Modif.length
        if l > 20 then l=20; suite=on
        if not chk
            m = mdf.Modif[0..l]
            m += '...' if suite
        else   m = mdf.Modif
        m
    
     * réduit la ligne des modif à une ligne de date
    $$.clic_reduce_date  = (mdf,chk ) ->
        l = mdf.Date.length
        if l>10 then l=10; suite = on
        if not chk
            m = mdf.Date[0..l]
            m +='...' if suite
        else  m = mdf.Date
        m
    
    $$.clic_reduce_bid  = (mdf,chk ) -> # réduit la ligne des modifS à une ligne
        l = mdf.Modif.length
        if l>15 then l=15; suite = on
        if not chk
            m = mdf.Modif[0..l]
            m +='...' if suite
        else   m = mdf.Modif
        m
    
    $$.clic_reduce_bid_date  = (mdf,chk ) -> # réduit la ligne des modif à une ligne
        l = mdf.Date.length
        if l>10 then l=10; suite = on
        if not chk
            m = mdf.Date[0..l]
            m +='...' if suite # mise en évidence de la suite
        else  m = mdf.Date
        m
    
    $$.chk_bid_click =(apply_it = false) ->
        $$.bid.flt.IdCamp = ''
        if $$.chk_bid_complet then $$.bid.bd_aff  = $$.bid.bd
        else                        $$.bid.bd_aff  = $$.bid.bd_reduits
        if apply_it then $$.$apply(
     */
    $$.fill_hidden_table = function(x) {
      return $$.h = x;
    };
    $$.w_win = function() {
      var dd, w, ww;
      ww = window;
      dd = document;
      if (ww.innerWidth) {
        w = ww.innerWidth;
      } else if (dd.documentElement && dd.documentElement.clientWidth(w = dd.documentElement.clientWidth)) {

      } else if (dd.body && dd.body.clientWidth) {
        w = dd.body.clientWidth;
      }
      return w;
    };
    $$.cal_width = function() {
      var w;
      w = $$.w_win();
      $$.tbl_w2 = ((w - 20) / 200 * 97).toFixed(0) + 'px';
      $$.tbl_w = ((w - 20) / 100 * 98).toFixed(0) + 'px';
      return $$.$apply();
    };
    window.onresize = $$.cal_width;
    $$.tbl_w = (($$.w_win() - 20) / 100 * 97).toFixed(0) + 'px';
    $$.open_modal = function(dialog, size) {
      var modalInstance;
      if (size == null) {
        size = 'sm';
      }
      modalInstance = $uibModal.open({
        animation: $scope.animationsEnabled,
        templateUrl: './php/05_modal_err.php',
        size: size,
        controller: 'ModalInstanceCtrl',
        resolve: {
          to_modal: function() {
            return dialog;
          }
        }
      });
      return modalInstance.result.then(function(from_modal) {
        if (from_modal == null) {
          from_modal = '';
        }
        $$.pgs_bar.raz();
        return $$.set_cursor('raz_cursor');
      });
    };

    /* LIGHT
     * ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ *
     * lancement de xy
     * ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ ~ ¨¨¨¨¨¨¨¨¨¨¨¨ *
    
    $$.$broadcast 'broadcast_to_xy', 'start_xy'
     */
    $$.maj_bd = function($$, $http, fle, v1, v2, v3, v4, $_then) {
      var response;
      if ($_then == null) {
        $_then = '';
      }
      if (bilan_exists(v4, v1, v3) && $$.board.bilan) {
        $$.get_bd_variation($$.var_nbj);
        return;
      }
      response = [
        '', '', {
          Date: ''
        }
      ];
      return $http.post(fle, {
        but: v1,
        date_1: v2,
        date_2: v3,
        v_ou_p: v4
      }).success(function(response, status, headers, config, v1) {
        var $_then_x, but_r, e, error1, k, len, ref, ref1, x;
        but_r = response.records[2].Date;
        if (but_r === 'dddr') {
          $$.dddr = response.records[0].date;
          return init_date($$.dddr);
        } else if (but_r !== 'bilan' && but_r !== 'variation') {
          if (but_r === 'gain_0') {
            $$.bd_gain_0 = response.records;
            handle_bd_gain_0();
            if (!$$.board.bilan) {
              return $$.$broadcast('broadcast_to_xy', 'start_xy');
            }
          } else {
            $$.bd_glob = response.records;
            if ($$.bd_glob.length < 2) {
              raz_bd_empty('Les critères de dates sont incorrects');
              return $$.change_2_dates();
            } else {
              $$.clic_tri_col('Marge');
              $$.tri = {
                col: 'Marge',
                desc: true
              };
              show('2 -');
              if (but_r === 'initial_dp') {
                bd_glob_dddr.push({
                  dv_dp: 'p',
                  bd: $$.bd_glob
                });
              }
              if (but_r === 'initial_w') {
                bd_glob_dddr.push({
                  dv_dp: 'w',
                  bd: $$.bd_glob
                });
              }
              if (but_r === 'initial_m') {
                bd_glob_dddr.push({
                  dv_dp: 'm',
                  bd: $$.bd_glob
                });
              }
              if (but_r === 'Initial') {
                bd_glob_dddr.push({
                  dv_dp: 'v',
                  bd: $$.bd_glob
                });
              }
              try {
                if ((ref = $$.rdio_dv) === 'v' || ref === 'p') {
                  $$.cmpr = 'd' + $$.rdio_dv;
                } else {
                  $$.cmpr = $$.rdio_dv;
                }
                if (but_r === 'initial_dp' || but_r === 'initial_w' || but_r === 'initial_m' || but_r === 'Initial') {
                  $$.bd_glob = get_bd_global_dvdp($$.rdio_dv);
                }
              } catch (error1) {
                e = error1;
                show_err("(01) :  maj_bd " + e.message, ' une erreur traitée ');
              } finally {
                $_then_x = function() {
                  $$.pgs_bar2.hide('light');
                  return show('maj_bd');
                };
                $timeout($_then_x, 2000);
                show('4 -');
              }
              return get_bd_jeux_regies_campagnes();
            }
          }
        } else {
          if (but_r === 'bilan') {
            $$.gbd_bilan = response.records;
            ref1 = $$.gbd_bilan;
            for (k = 0, len = ref1.length; k < len; k++) {
              x = ref1[k];
              x.Marge = parseFloat(x.Marge);
            }
            bd_tous_les_bilans.push({
              v_ou_p: $$.rdio_dv,
              bd: $$.gbd_bilan,
              dddp: $$.dddp
            });
            $_then();
            return $$.get_bd_variation($$.var_nbj);
          } else if (but_r === 'variation') {
            $$.bd_variation = response.records;
            return handle_bd_variation();
          }
        }
      });
    };
    get_bd_global_dvdp = function(bse) {
      var k, len;
      for (k = 0, len = bd_glob_dddr.length; k < len; k++) {
        t = bd_glob_dddr[k];
        if (t.dv_dp === bse) {
          return t.bd;
        }
      }
    };
    $$.bd_gain_0_length = function() {
      var b, i, k, len, ref, results;
      i = 0;
      ref = $$.bd_gain_0;
      results = [];
      for (k = 0, len = ref.length; k < len; k++) {
        b = ref[k];
        if (b.idCamp != null) {
          results.push(i++);
        } else {
          break;
        }
      }
      return results;
    };
    handle_bd_gain_0 = function() {
      if ($$.bd_gain_0_length() === 0) {
        $$.bd_gain_0[0].TjClic = $$.bd_gain_0[0].Marge = $$.bd_gain_0[0].idCamp = '-';
        $$.bd_gain_0[0].TjCout = $$.bd_gain_0[0].Gain = $$.bd_gain_0[0].Jeu = $$.bd_gain_0[0].Regie = '-';
        return $$.bd_gain_0[0].Camp = ' Aucune ligne à gain nul ';
      }
    };
    handle_bd_variation = function() {
      var aa, ab, ac, ad, ae, cb1, error, error1, i, k, l, len, len1, len2, len3, len4, len5, n_var, o, q, ref, ref1, ref2, ref3, ref4, ref5, v, x, xid, xx, xx2, y, z;
      n_var = 9;
      try {
        ref = $$.bd_variation;
        for (k = 0, len = ref.length; k < len; k++) {
          y = ref[k];
          if ((y.Camp != null) && y.Camp.lastIndexOf('(') > 0) {
            y.Camp = y.Camp.slice(y.Camp.lastIndexOf("(") + 1, y.Camp.lastIndexOf(")"));
          } else {
            ref1 = ['premium', 'www', 'excluding', 'KITTY - FYBER'];
            for (l = 0, len1 = ref1.length; l < len1; l++) {
              z = ref1[l];
              if ((y.Camp != null) && y.Camp.lastIndexOf(z) > 0) {
                y.Camp = z;
              }
            }
          }
        }
        ref2 = $$.bd_variation;
        for (o = 0, len2 = ref2.length; o < len2; o++) {
          t = ref2[o];
          ref3 = ['WW, excluding live countries', 'Global', 'KITTY - FYBER'];
          for (q = 0, len3 = ref3.length; q < len3; q++) {
            z = ref3[q];
            if (t.Camp === z) {
              t.Camp = 'www';
            }
          }
        }
        ref4 = $$.bd_variation;
        for (v = 0, len4 = ref4.length; v < len4; v++) {
          x = ref4[v];
          xid = x.idCamp;
          x.Marge = parseFloat(x.Marge);
          x.TjClic = parseFloat(x.TjClic);
          $$.bd_glob_dvdp = get_bd_global_dvdp($$.rdio_dv);
          ref5 = $$.bd_glob_dvdp;
          for (aa = 0, len5 = ref5.length; aa < len5; aa++) {
            y = ref5[aa];
            if ((y.idCamp != null) && y.idCamp === xid) {
              x.Dddr_marge = parseFloat(y.Marge);
              x.Dddr_TjClic = parseFloat(y.TjClic);
              x.Var_marge = x.Dddr_marge - x.Marge;
              x.Var_clic = x.Dddr_TjClic - x.TjClic;
              xx = (x.Dddr_marge / x.Marge - 1) * 100;
              if (x.Dddr_marge >= x.Marge) {
                xx = sign(xx) * xx;
              } else {
                xx = sign(xx) * (-1) * xx;
              }
              x.Var_marge_relative = xx;
              xx2 = (x.Dddr_TjClic / x.TjClic - 1) * 100;
              if (x.Dddr_TjClic >= x.TjClic) {
                xx = sign(xx2) * xx2;
              } else {
                xx2 = sign(xx2) * (-1) * xx2;
              }
              x.Var_clic_relative = xx2;
              break;
            }
          }
          if (x.Dddr_marge == null) {
            x.Dddr_marge = 'undef';
          }
          if (x.Dddr_TjClic == null) {
            x.Dddr_marge = 'undef';
          }
        }
        $$.bd_var_abs = [];
        $$.bd_variation.sort(marge_var_abs);
        for (i = ab = 0; ab <= 9; i = ++ab) {
          $$.bd_var_abs.push($$.bd_variation[i]);
        }
        $$.bd_var_abs_clic = [];
        $$.bd_variation.sort(clic_var_abs);
        for (i = ac = 0; ac <= 9; i = ++ac) {
          $$.bd_var_abs_clic.push($$.bd_variation[i]);
        }
        $$.bd_var_rel = [];
        $$.bd_variation.sort(marge_var_rel);
        for (i = ad = 0; ad <= 9; i = ++ad) {
          $$.bd_var_rel.push($$.bd_variation[i]);
        }
        $$.bd_var_rel_clic = [];
        $$.bd_variation.sort(clic_var_rel);
        for (i = ae = 0; ae <= 9; i = ++ae) {
          $$.bd_var_rel_clic.push($$.bd_variation[i]);
        }
        cb1 = function() {
          return $$.$broadcast('broadcast_to_xy', 'bd var ok');
        };
        return setTimeout(cb1, 100);
      } catch (error1) {
        error = error1;
        return show(' :  (01)  : handle_bd_variation ', 'fc, Erreur traitée : ' + error.message);
      } finally {
        $$.set_cursor('auto');
      }
    };
    bilan_exists = function(vpw, but, dddp) {
      var d, k, len;
      if (but !== 'bilan') {
        return false;
      }
      for (k = 0, len = bd_tous_les_bilans.length; k < len; k++) {
        d = bd_tous_les_bilans[k];
        if ((d.v_ou_p === vpw) && (d.dddp === $$.dddp)) {
          $$.gbd_bilan = d.bd;
          return true;
        }
      }
      return false;
    };
    $$.maj_bd_2 = function(dte) {
      $$.dates = date_to_string(dte);
      $$.maj_bd($$, $http, ajx_fl, "date", date_to_string(dte), date_to_string(dte), $$.rdio_dv);
      return $$.maj_bd($$, $http, ajx_fl, "gain_0", date_to_string(dte), date_to_string(dte), $$.rdio_dv);
    };
    $$.change_2_dates = function() {
      $$.dates = " du  " + (date_to_string($$.date_0)) + "  au  " + (date_to_string($$.date_2));
      ancienBut = 'date_0_et_2';
      $$.maj_bd($$, $http, ajx_fl, 'periode', date_to_string($$.date_0), date_to_string($$.date_2), $$.rdio_dv);
      return $$.maj_bd($$, $http, ajx_fl, 'gain_0', date_to_string($$.date_0), date_to_string($$.date_2), $$.rdio_dv);
    };
    $$.bazinga_scroll = function(id, off_set) {
      var options, toggle;
      if (off_set == null) {
        off_set = 0;
      }
      toggle = document.querySelector('#toggle');
      options = {
        speed: 1954 - 954,
        easing: 'easeInCubic',
        offset: off_set
      };
      return smoothScroll.animateScroll('#' + id, toggle, options);
    };
    $$.dte_n_jours_avant = function(dte, n) {
      var d2;
      if (n == null) {
        n = 15;
      }
      d2 = new Date(dte.getFullYear(), dte.getMonth(), dte.getDate() - n, 1, 0, 1, 1);
      return date_to_string(d2);
    };
    $$.hier = function(dte) {
      return $$.dte_n_jours_avant(dte, 1);
    };
    $$.change_begining_prd = function(n_days) {
      return $$.dddp = $$.dte_n_jours_avant(new Date($$.dddr), n_days);
    };
    init_date = function(d) {
      window.top.date_0 = $$.date_0 = $$.date_2 = new Date(d);
      $$.dddp = $$.dte_n_jours_avant(new Date($$.dddr), $$.day_prd);
      switch ($$.rdio_dv) {
        case 'v':
          $$.maj_bd($$, $http, ajx_fl, 'Initial', d, d, $$.rdio_dv);
          break;
        case 'p':
          $$.maj_bd($$, $http, ajx_fl, 'initial_dp', d, d, $$.rdio_dv);
          break;
        case 'w':
          $$.maj_bd($$, $http, ajx_fl, 'initial_w', d, d, $$.rdio_dv);
          break;
        case 'm':
          $$.maj_bd($$, $http, ajx_fl, 'initial_m', d, d, $$.rdio_dv);
      }
      $$.get_bilan();
      return $$.dates = d;
    };
    dte_last_report = function() {
      return new Date(new Date().getTime() - 31 * 3600000 + 1 * $$.TimeOffset);
    };
    window.top.date_0 = $$.date_2 = $$.date_0 = dte_last_report();
    stg = new Date(new Date().getTime() - 31 * 3600 * 1000 + 0 * $$.TimeOffset).toISOString().slice(0, 10);
    $$.dates = stg;
    date_is_ok = function(dte) {
      var dtemp;
      dtemp = date_to_string(new Date(dte));
      return dtemp <= $$.dddr;
    };
    $$.change_D0 = function() {
      if (date_is_ok($$.date_0)) {
        $$.dte_select = '';
        ancienBut = 'date_0';
        return $$.maj_bd_2(date_to_string($$.date_0));
      } else {
        return raz_bd_empty('Erreur de date', 'La date requise est postérieure à celle de la dernière extraction.');
      }
    };
    $$.change_D2 = function() {
      if (date_is_ok($$.date_2)) {
        $$.dte_select = '';
        ancienBut = 'date_2';
        return $$.maj_bd_2(date_to_string($$.date_2));
      } else {
        return raz_bd_empty('Erreur de date', 'La date requise est postérieure à celle de la dernière extraction.');
      }
    };
    $$.menu_on_off = function(visible) {
      $$.show_menu = visible === 'visible';
      if (visible === 'visible') {
        return $$.height_blank_menu = 'height_blank_menu_1';
      } else {
        return $$.height_blank_menu = 'height_blank_menu_2';
      }
    };
    $$.maj_bd($$, $http, ajx_fl, 'dddr', '', '', '');
    $$.bd_glob = get_bd_global_dvdp($$.rdio_dv);
    $$.clic_tri_col = function(col) {
      var k, len, ref, z;
      if (col !== 'Regie' && col !== 'Jeu' && col !== 'Camp') {
        ref = $$.bd_glob;
        for (k = 0, len = ref.length; k < len; k++) {
          z = ref[k];
          z[col] = parseFloat(z[col]);
        }
      }
      if ($$.tri.col !== col) {
        return $$.tri.col = col;
      } else {
        return $$.tri.desc = !$$.tri.desc;
      }
    };
    $$.clic_tri_col_simple = function(col, sens) {
      var k, len, ref, z;
      if (sens == null) {
        sens = 'up';
      }
      if (col !== 'Regie' && col !== 'Jeu' && col !== 'Camp') {
        ref = $$.bd_glob;
        for (k = 0, len = ref.length; k < len; k++) {
          z = ref[k];
          z[col] = parseFloat(z[col]);
        }
      }
      if ($$.tri.col !== col) {
        $$.tri.col = col;
      }
      if (sens === 'up') {
        return $$.tri.desc = true;
      } else {
        return $$.tri.desc = false;
      }
    };
    $$.get_bd_regie_jeu = function(j) {
      var b0, b1, bb, c, k, len, m, p, r;
      b0 = $$.bd_glob.where({
        Jeu: j
      });
      b1 = [];
      for (k = 0, len = b0.length; k < len; k++) {
        bb = b0[k];
        c = parseFloat(bb.TjCout);
        m = parseFloat(bb.Marge);
        p = bb.Camp;
        r = bb.Regie;
        b1.push({
          Jeu: j,
          Regie: r,
          Marge: m,
          Cout: c,
          Renta: -m / c * 1.2,
          Camp: p
        });
      }
      return $$.bd_regie_jeu = b1;
    };
    $$.change_select_tab = function(type, value) {
      if ($$.rdio_action === '-10') {
        $$.set_cursor('wait');
        partial_raz();
        $$.filtre[type] = value;
        $$.rdio_action = '';
        $$.$apply();
      }
      return $$.rdio_action = '';
    };
    $$.sum_col = function(col) {
      var k, len, ref, s, y;
      try {
        s = 0;
        ref = $$.gbd_filtree;
        for (k = 0, len = ref.length; k < len; k++) {
          y = ref[k];
          s += parseFloat(y[col]);
        }
        return s;
      } catch (undefined) {}
    };
    $$.sum_global = function(col) {
      var k, len, ref, s, y;
      s = 0;
      try {
        ref = $$.bd_glob;
        for (k = 0, len = ref.length; k < len; k++) {
          y = ref[k];
          s += parseFloat(y[col]);
        }
        return s.toFixed(0);
      } catch (undefined) {}
    };
    partial_raz = function() {
      $$.fJeu = '';
      $$.filtre = {
        Jeu: '',
        Regie: '',
        Camp: ''
      };
      $$.fGain = $$.fMarge = -1e9;
      $$.fRenta = $$.fTjCPM = 1e9;
      return $$.clic_tri_col('Marge');
    };
    $$.raz_filtre = function() {
      partial_raz();
      $$.dte_select = "j";
      $$.date_0 = $$.date_2 = new Date($$.dddr);
      return $$.mdf.show_one_cmp = false;
    };
    $$.cvr_cpm = $$.cvr_inf_1 = $$.change_700 = $$.change_70 = $$.change_raz = $$.change_0 = function() {
      return $$.raz_filtre();
    };
    $$.change_T = $$.change_M = $$.change_G = function() {
      return $$.rdio_action = '';
    };
    $$.change_tjcpm5 = function(max_tjcpm) {
      var j7;
      if (max_tjcpm == null) {
        max_tjcpm = 5;
      }
      j7 = new Date(new Date($$.dddr).getTime() - 6 * 24 * 3600000);
      $$.date_0 = new Date($$.dddr);
      $$.date_2 = j7;
      $$.dates = " du  " + (date_to_string($$.date_0)) + "  au  " + (date_to_string($$.date_2));
      ancienBut = 'date_0_et_2';
      $$.maj_bd($$, $http, ajx_fl, 'periode', date_to_string($$.date_0), date_to_string($$.date_2), $$.rdio_dv);
      $$.fTjCPM = max_tjcpm;
      $$.filtre = {
        Regie: 'TJ',
        Jeu: '',
        Camp: ''
      };
      $$.fGain = $$.fMarge = -1e9;
      $$.fRenta = 1e9;
      $$.clic_tri_col('Marge');
      $$.dte_select = "j7";
      $$.chk_aff_tableau = true;
      return $$.bazinga_scroll('id_tableau');
    };
    $$.$watch("filtre.Regie", function(nw, old) {
      if (nw !== old) {
        $$.class_cursor = 'cursor_wait';
        return cursor_waiting_for = 'regie';
      }
    });
    $$.$watch("filtre.Jeu", function(nw, old) {
      if (nw !== old) {
        $$.class_cursor = 'cursor_wait';
        return cursor_waiting_for = 'regie';
      }
    });
    $$.$watch("filtre.Camp", function(nw, old) {
      if (nw !== old) {
        $$.class_cursor = 'cursor_wait';
        return cursor_waiting_for = 'regie';
      }
    });
    idx_lst = 0;
    $$.when_last = function(lst) {
      if (cursor_waiting_for === 'filtre' || cursor_waiting_for === 'regie') {
        idx_lst++;
      }
      if (idx_lst > 6 && cursor_waiting_for === 'filtre') {
        $$.set_cursor('raz_cursor');
        idx_lst = 0;
      }
      if (idx_lst > 2 && cursor_waiting_for === 'regie') {
        $$.set_cursor('raz_cursor');
        return idx_lst = 0;
      }
    };
    $$.set_cursor = function(cr, call_back) {
      var set_end_filtre;
      set_end_filtre = function() {
        return $$.set_cursor('raz_cursor');
      };
      if (cr === 'wait' || cr === 'dte' || cr === 'mois') {
        $$.class_cursor = 'cursor_wait';
        cursor_waiting_for = cr;
        return $timeout(set_end_filtre, 6500);
      } else if (cr === 'filtre' && cursor_waiting_for === '') {
        $$.class_cursor = 'cursor_wait';
        cursor_waiting_for = cr;
        return $timeout(set_end_filtre, 4000);
      } else if (cr === 'raz_cursor') {
        $$.class_cursor = 'cursor_auto';
        return cursor_waiting_for = '';
      } else if (cr === 'auto' && cursor_waiting_for === 'wait') {
        $$.class_cursor = 'cursor_auto';
        return cursor_waiting_for = '';
      } else if (cr === 'fin_mois' && cursor_waiting_for === 'mois') {
        $$.class_cursor = 'cursor_auto';
        return cursor_waiting_for = '';
      }
    };
    $$.get_bilan = function() {
      var $_then;
      $_then = function() {
        return $$.board.bilan = true;
      };
      if ($$.chk_aff_bilan) {
        return $$.maj_bd($$, $http, ajx_fl, 'bilan', $$.dddr, $$.dddp, $$.rdio_dv, $_then);
      } else {
        return $$.get_bd_variation($$.var_nbj);
      }
    };
    $$.change_dv = function() {
      $$.chk_aff_bilan = $$.chk_aff_xy === false;
      $$.chk_aff_tableau = true;
      $$.board.xy = $$.board.bilan = false;
      $$.chk_aff_bilan = $$.chk_aff_graph_lgn = false;
      $$.rdio_action = 'raz';
      vu_marge_10 = true;
      $$.bd_glob = [];
      switch ($$.rdio_dv) {
        case 'v':
          $$.maj_bd($$, $http, ajx_fl, 'Initial', $$.dddr, $$.dddr, $$.rdio_dv);
          break;
        case 'p':
          $$.maj_bd($$, $http, ajx_fl, 'initial_dp', $$.dddr, $$.dddr, $$.rdio_dv);
          break;
        case 'w':
          $$.maj_bd($$, $http, ajx_fl, 'initial_w', $$.dddr, $$.dddr, $$.rdio_dv);
          break;
        case 'm':
          $$.maj_bd($$, $http, ajx_fl, 'initial_m', $$.dddr, $$.dddr, $$.rdio_dv);
      }
      $_debut = true;
      $$.get_bilan();
      $$.filtre = {
        Jeu: '',
        Regie: '',
        Camp: ''
      };
      switch (ancienBut) {
        case 'date_0':
          return $$.change_2_dates();
        case 'date_2':
          return $$.change_2_dates();
        default:
          return $$.change_2_dates();
      }
    };
    $$.change_dte_select = function(dte) {
      var d, hier, j30, j7, today;
      switch (dte) {
        case "j":
        case '':
          today = new Date($$.dddr);
          $$.date_0 = $$.date_2 = today;
          $$.change_bd_variation(date_to_string(new Date(new Date($$.dddr).getTime() - 6 * 24 * 3600000)), 7);
          break;
        case "j-1":
          hier = new Date(new Date($$.dddr).getTime() - 24 * 3600000);
          $$.date_0 = $$.date_2 = hier;
          $$.change_bd_variation(2, 2);
          break;
        case "j7":
          j7 = new Date(new Date($$.dddr).getTime() - 8 * 24 * 3600000);
          $$.date_0 = new Date($$.dddr);
          $$.date_2 = j7;
          $$.change_bd_variation(date_to_string($$.date_2), 7);
          break;
        case "j30":
          j30 = new Date(new Date($$.dddr).getTime() - 31 * 24 * 3600000);
          $$.date_0 = new Date($$.dddr);
          $$.date_2 = j30;
          $$.change_bd_variation(date_to_string($$.date_2), 30);
          break;
        case "mois":
          $$.date_0 = d = new Date($$.dddr);
          $$.date_2 = new Date(d.getFullYear(), d.getMonth(), 1, 0, 0, 1, 1);
          $$.change_bd_variation(date_to_string($$.date_2), 'mois');
          break;
        case "mois-1":
          d = new Date($$.dddr);
          $$.date_0 = new Date(d.getFullYear(), d.getMonth(), 0, 1, 0, 1, 1);
          $$.date_2 = new Date(d.getFullYear(), d.getMonth() - 1, 1, 1, 0, 1, 1);
          $$.change_bd_variation(date_to_string($$.date_2), 'mois-1');
          break;
        case "tout":
          $$.date_0 = new Date($$.dddr);
          d = new Date(new Date('2010-01-01').getTime());
          $$.date_2 = d;
          $$.change_bd_variation(date_to_string($$.date_2), 'tout');
      }
      return $$.change_2_dates();
    };
    $$.filtre = {
      Jeu: '',
      Regie: '',
      Camp: ''
    };
    $$.fGain = '';
    $$.fMarge = -1e9;
    $$.fRenta = $$.fTjCPM = 1e9;
    $$.rdio_action = "700";
    $$.tri = {
      col: 'Marge',
      desc: true
    };
    $$.tri_levier = {
      col: 'Marge',
      desc: true
    };
    $$.titre = '';
    $$.Gain_sup = function(x) {
      return x.Gain > $$.fGain;
    };
    $$.Renta_inf = function(x) {
      return -x.Marge / x.TjCout * 1.2 <= $$.fRenta;
    };
    $$.TjCPM_inf = function(x) {
      return x.TjCPM < $$.fTjCPM;
    };
    $$.is_id = function(x) {
      if (!$$.mdf.show_one_cmp) {
        return true;
      }
      return parseFloat(x.idCamp) === parseFloat($$.mdf.flt_IdCamp);
    };
    marge_inf_10_exists = function(bd) {
      var k, len, y;
      for (k = 0, len = bd.length; k < len; k++) {
        y = bd[k];
        if (parseFloat(y.Marge) < -10) {
          return true;
        }
      }
      return false;
    };
    $$.Marge_sup = function(x) {
      var k, len, m, mt, ref, ref1, xmax, y;
      xmax = m = mt = 0;
      ref = $$.bd_glob;
      for (k = 0, len = ref.length; k < len; k++) {
        y = ref[k];
        mt += parseFloat(y['Marge']);
      }
      switch ($$.rdio_action) {
        case "cvr_1":
          return parseFloat(x.Transfo) / parseFloat(x.TjClic) * 100 < 1;
        case "cvr_1_&_cpm_5":
          return (parseFloat(x.Transfo) / parseFloat(x.TjClic) * 100 < 1) && (parseFloat(x.TjCPM) < 5);
        case "70":
          return x.Marge > xmax;
        case "-10":
          return x.Marge < -10;
        case "0":
          return x.Marge < 0;
        case "700":
          return !((xmax >= (ref1 = parseFloat(x.Marge)) && ref1 > 0));
        default:
          return x.Marge > $$.fMarge;
      }
    };
    $$.change_marge_renta = function(m_min, r_max) {
      var bdl;
      if (m_min == null) {
        m_min = 100;
      }
      if (r_max == null) {
        r_max = 2;
      }
      bdl = [];
      $$.fJeu = '';
      $$.filtre = {
        Jeu: '',
        Regie: '',
        Camp: ''
      };
      $$.fMarge = $$.fGain = -Infinity;
      $$.fTjCPM = Infinity;
      $$.clic_tri_col('Marge');
      $$.fRenta = 2;
      $$.fMarge = m_min;
      $$.chk_aff_tableau = true;
      return $$.bazinga_scroll('id_tableau');
    };
    $$.get_bd_variation = function(nbj) {
      var dte;
      if (nbj == null) {
        nbj = 7;
      }
      if (typeof nbj === 'number') {
        dte = date_to_string(new Date(new Date($$.dddr).getTime() - (nbj - 1) * 24 * 3600000));
      } else {
        dte = nbj;
      }
      $$.bd_variation = [];
      return $$.maj_bd($$, $http, ajx_fl, 'variation', $$.dddr, dte, $$.rdio_dv);
    };
    $$.change_bd_variation = function(nbj, periode) {
      if (nbj == null) {
        nbj = 7;
      }
      if (periode == null) {
        periode = 7;
      }
      $$.get_bd_variation(nbj);
      return handle_bd_variation();
    };
    $$.var_2_glob = function(cmp) {
      $$.filtre = {
        Regie: cmp.Regie,
        Jeu: cmp.Jeu,
        Camp: cmp.Camp
      };

      /* raz des filtres inutiles */
      $$.fGain = $$.fMarge = -1e9;
      $$.fRenta = 1e9;
      $$.chk_aff_tableau = true;
      $$.rdio_action = '';
      return $$.bazinga_scroll('id_tableau', 45);
    };
    $$.filter_glob_by_id = function(id) {
      $$.filtre = {
        Regie: '',
        Jeu: '',
        Camp: ''
      };
      $$.fGain = $$.fMarge = -1e9;
      $$.fRenta = 1e9;
      $$.mdf.flt_IdCamp = id;
      $$.chk_aff_tableau = true;
      $$.rdio_action = '';
      return $$.bazinga_scroll('id_tableau', 45);
    };
    get_bd_jeux_regies_campagnes = function() {
      var aa, ab, ac, ad, ae, e, error1, k, l, len, len1, len2, len3, len4, len5, len6, len7, len8, len9, o, q, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, results, tc, tj, tr, v, y, z;
      try {
        $$.bd_jeux = [];
        tj = [];
        ref = $$.bd_glob;
        for (k = 0, len = ref.length; k < len; k++) {
          y = ref[k];
          if (ref1 = y.Jeu, indexOf.call(tj, ref1) < 0) {
            tj.push(y.Jeu);
          }
        }
        for (l = 0, len1 = tj.length; l < len1; l++) {
          z = tj[l];
          $$.bd_jeux.push({
            name: z,
            value: z
          });
        }
        $$.bd_regies = [];
        tr = [];
        ref2 = $$.bd_glob;
        for (o = 0, len2 = ref2.length; o < len2; o++) {
          y = ref2[o];
          if (ref3 = y.Regie, indexOf.call(tr, ref3) < 0) {
            tr.push(y.Regie);
          }
        }
        for (q = 0, len3 = tr.length; q < len3; q++) {
          z = tr[q];
          $$.bd_regies.push({
            name: z,
            value: z
          });
        }
        $$.TJ_exists = indexOf.call(tr, 'TJ') >= 0;
        ref4 = $$.bd_glob;
        for (v = 0, len4 = ref4.length; v < len4; v++) {
          y = ref4[v];
          if ((y.Camp != null) && y.Camp.lastIndexOf('(') > 0) {
            y.Camp = y.Camp.slice(y.Camp.lastIndexOf("(") + 1, y.Camp.lastIndexOf(")"));
          } else {
            ref5 = ['premium', 'www', 'excluding', 'KITTY - FYBER'];
            for (aa = 0, len5 = ref5.length; aa < len5; aa++) {
              z = ref5[aa];
              if ((y.Camp != null) && y.Camp.lastIndexOf(z) > 0) {
                y.Camp = z;
              }
            }
          }
        }
        ref6 = $$.bd_glob;
        for (ab = 0, len6 = ref6.length; ab < len6; ab++) {
          t = ref6[ab];
          ref7 = ['WW, excluding live countries', 'Global', 'KITTY - FYBER'];
          for (ac = 0, len7 = ref7.length; ac < len7; ac++) {
            z = ref7[ac];
            if (t.Camp === z) {
              t.Camp = 'www';
            }
          }
        }
        $$.bd_camp = [];
        tc = [];
        ref8 = $$.bd_glob;
        for (ad = 0, len8 = ref8.length; ad < len8; ad++) {
          y = ref8[ad];
          if (ref9 = y.Camp, indexOf.call(tc, ref9) < 0) {
            tc.push(y.Camp);
          }
        }
        results = [];
        for (ae = 0, len9 = tc.length; ae < len9; ae++) {
          z = tc[ae];
          results.push($$.bd_camp.push({
            name: z,
            value: z
          }));
        }
        return results;
      } catch (error1) {
        e = error1;
        if ($$.bd_glob == null) {
          show('(01) : get_bd_jeu, 01, erreur traitée');
          wait_ms(1000);
        } else {
          return show('(01) : get_bd_j', 'erreur inconnue');
        }
      }
    };
    $$.format_n = function(a, t) {
      if (t == null) {
        t = 0;
      }
      u = parseFloat(parseFloat(a).toFixed(t));
      if ((a === Infinity || a === (-Infinity)) || isNaN(a)) {
        return '';
      }
      return u.toLocaleString();
    };
    raz_bd_empty = function(t_itre, b_ody) {
      if (t_itre == null) {
        t_itre = 'Filtre trop restrictif';
      }
      if (b_ody == null) {
        b_ody = ' Remise à zéro des filtres';
      }
      $$.open_modal({
        title: t_itre,
        body: b_ody,
        job: 'Raz'
      });
      $$.rdio_action = 'raz';
      $$.raz_filtre();
      $$.change_2_dates();
      return $_debut = true;
    };
    $$.raz_if_bd_empty = function() {
      try {
        if ($$.gbd_filtree.length > 0) {
          $_debut = false;
        }
        if ($$.gbd_filtree.length < 1 && !$_debut) {
          $$.open_modal({
            title: 'Filtres trop restrictifs',
            body: ' Remise à zéro des filtres',
            job: 'Raz'
          });
          $$.rdio_action = 'raz';
          $$.raz_filtre();
          if (!$_debut) {
            $_debut = true;
          }
          return true;
        }
      } catch (undefined) {}
      return false;
    };
  });

  window.date_to_string = function(d) {
    return new Date(new Date(d).getTime() - 1 * (new Date().getTimezoneOffset() * 60 * 1000)).toISOString().slice(0, 10);
  };

  sign = function(x) {
    if (x < 0) {
      return -1;
    } else {
      return 1;
    }
  };

  Raccourcis = (function() {
    function Raccourcis() {
      this.montre = bind(this.montre, this);
      this.keydown = false;
      this.code_down = 0;
      this.ts_down = this.ts_up = 0;
      this.short = true;
    }

    Raccourcis.prototype.get_event = function(e) {
      if (e.type === 'keydown' && this.keydown === false) {
        this.keydown = true;
        this.code_down = e.keyCode;
        return this.ts_down = e.timeStamp;
      } else if (e.type === 'keyup') {
        this.keydown = false;
        this.ts_up = e.timeStamp;
        return this.short = this.is_short();
      }
    };

    Raccourcis.prototype.montre = function() {
      var stg;
      return stg = ("code_down: " + this.code_down + " | ts_down : " + this.ts_down + " | ts_up : " + this.ts_up + " |  short: " + this.short + " | time:") + this.get_time();
    };

    Raccourcis.prototype.get_time = function() {
      return this.ts_up - this.ts_down;
    };

    Raccourcis.prototype.is_short = function() {
      return this.get_time() < 1000;
    };

    Raccourcis.prototype.reset = function() {
      this.code_down = this.ts_down = this.ts_up = 0;
      return this.short = false;
    };

    Raccourcis.prototype.flip = function(dom, flip_on_off) {
      switch (flip_on_off) {
        case 'flip':
          return !dom;
        case 'on':
          return true;
        case 'off':
          return false;
      }
    };

    return Raccourcis;

  })();

  window.pourcentage = function(a, b) {
    var c;
    a = parseFloat(a);
    b = parseFloat(b);
    if (b === 0) {
      return NaN;
    }
    c = (a / b - 1) * 100;
    if (a >= b) {
      c = sign(c) * c;
    } else {
      if (b > a) {
        c = sign(c) * (-1) * c;
      }
    }
    return c;
  };

  window.Number.prototype.pourcentage = function(b) {
    var a, c;
    a = this.valueOf();
    b = parseFloat(b);
    if (b === 0) {
      return NaN;
    }
    c = (a / b - 1) * 100;
    if (a >= b) {
      return sign(c) * c;
    }
    if (b > a) {
      return sign(c) * (-1) * c;
    }
  };

  if (!Array.prototype.filter) {
    Array.prototype.filter = function(callback) {
      var element, k, len, results;
      results = [];
      for (k = 0, len = this.length; k < len; k++) {
        element = this[k];
        if (callback(element)) {
          results.push(element);
        }
      }
      return results;
    };
  }

  window.Array.prototype.where = function(query) {
    var hit;
    if (typeof query !== "object") {
      return [];
    }
    hit = Object.keys(query).length;
    return this.filter(function(item) {
      var key, match, val;
      match = 0;
      for (key in query) {
        val = query[key];
        if (item[key] === val) {
          match += 1;
        }
      }
      if (match === hit) {
        return true;
      } else {
        return false;
      }
    });
  };

  window.marge_var_abs = function(a, b) {
    var c, d;
    c = a.Var_marge * sign(a.Var_marge);
    d = b.Var_marge * sign(b.Var_marge);
    if (c > d) {
      return -1;
    } else if (c < d) {
      return 1;
    }
    return 0;
  };

  window.clic_var_abs = function(a, b) {
    var c, d;
    c = a.Var_clic * sign(a.Var_clic);
    d = b.Var_clic * sign(b.Var_clic);
    if (c > d) {
      return -1;
    } else if (c < d) {
      return 1;
    }
    return 0;
  };

  window.marge_var_rel = function(a, b) {
    var c, d;
    c = a.Var_marge_relative * sign(a.Var_marge_relative);
    d = b.Var_marge_relative * sign(b.Var_marge_relative);
    if (c > d) {
      return -1;
    } else if (c < d) {
      return 1;
    }
    return 0;
  };

  window.clic_var_rel = function(a, b) {
    var c, d;
    c = a.Var_clic_relative * sign(a.Var_clic_relative);
    d = b.Var_clic_relative * sign(b.Var_clic_relative);
    if (c > d) {
      return -1;
    } else if (c < d) {
      return 1;
    }
    return 0;
  };

}).call(this);

//# sourceMappingURL=01L_ctl_mrc.js.map
