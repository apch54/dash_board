// Generated by CoffeeScript 1.12.6

/* maj on 2017-05-26 by fc */

(function() {
  var app, present_file, top_init,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  app = angular.module("app_graph", []);

  top_init = new Date();

  present_file = '02_graph ; ';

  app.controller("ctl_graph", function($scope, $http, $timeout) {
    var $$, active_graphs, ajx_fl, backup_db, base_name, chart_lgn, col_var, coul, coulxy, cursor_waiting_for, def_chart, def_graph, def_graph_area, def_graph_modifs, get_all_regies_or_games, get_autre_modif_id, get_bd_graph, get_bid, get_bid_reduits, get_modifs, get_modifs_reduits, graph_exists, handleDataUpdated, handleRender, hier, init_graph, mBackUp, mrg_glob_dv, parentScope, show, show_modifs_bid_xy, validate_data, wait_for_array_ms, wait_for_value_ms, zoomChart;
    wait_for_value_ms = function(val) {
      if (val == null) {
        wait_ms(1000);
      }
      return val;
    };
    wait_for_array_ms = function(arr, ms) {
      if (ms == null) {
        ms = 1000;
      }
      if (arr.length < 1) {
        wait_ms(ms);
      }
      return arr;
    };
    $scope.psc = parentScope = parent.angular.element('body').scope();
    $$ = $scope;
    show = $$.psc.show;
    ajx_fl = "php/11_bd_graph.php";
    $$.bd_3_max_var = [];
    chart_lgn = false;
    $$.chk_area = true;
    $$.chk_top_var = false;
    $$.top_3 = [];
    active_graphs = [];
    $$.modifs = {
      chk_aff_xy: false,
      aff_xy: [],
      bd: [],
      bd_reduits: []
    };
    $$.bid = {
      aff_xy: [],
      bd: [],
      bd_reduits: []
    };
    $$.logs = {
      show: false,
      chk: {
        xy: false
      }
    };
    $$.class_cursor = 'cursor_auto';
    cursor_waiting_for = '';
    $$.dddp = '2015-01-01';
    coulxy = parentScope.pie_colors;
    $$.bd_graph2 = false;
    $$.bd_graph_map = [];
    chart_lgn.graphs = [];
    active_graphs = [];
    backup_db = parentScope.backUp_db;
    mBackUp = function(n) {
      switch (n) {
        case 'xy_regies':
          return {
            name: n,
            famille: $$.rdio_dv,
            dt1: $$.day_prd,
            dt2: 0
          };
        case 'xy_jeux':
          return {
            name: n,
            famille: $$.rdio_dv,
            dt1: $$.day_prd,
            dt2: 0
          };
      }
    };
    base_name = function(bse) {
      switch (bse) {
        case 'v':
          return '_dv';
        case 'p':
          return '_dp';
        case 'm':
          return '_m';
        case 'w':
          return '_w';
        case 'o':
          return '_o';
        case 'at':
          return '_at';
      }
    };
    parentScope.$on('broadcast_to_xy', function(event, args) {
      var a, error, ref, ref1;
      try {
        if (args === 'start_xy') {
          $$.rdio_dv = parentScope.rdio_dv;
          if ((ref = $$.rdio_dv) === 'w' || ref === 'm' || ref === 'o' || ref === 'at') {
            $$.titre1 = '[' + $$.rdio_dv + ']';
          } else {
            $$.titre1 = "[d" + $$.rdio_dv + "]";
          }
          $$.day_prd = parentScope.day_prd;
          return $$.show_bse_m = parentScope.show_bse_m;
        } else if (args === 'bd var ok') {
          $$.top_3 = [];
          $$.rdio_lgn = 'aires';
          $$.logs.show = parentScope.logs.show;
          if ($$.psc.chk_aff_xy && $$.psc.chk_aff_bilan) {
            init_graph();
          }
          if ($$.psc.chk_aff_xy) {
            $$.psc.change_scope(true, 'graph_lgn', -75);
          }
          return $$.$apply();
        } else if ((args.nature != null) && (args.nature === 'modifs to display')) {
          show_modifs_bid_xy(args.info);
          init_graph();
          return $$.$apply();
        } else if ((args.nature != null) && (args.nature === 'get autre modifs')) {
          if (args.base === 'mdf') {
            $$.bid.bd = get_bid();
            parentScope.bid.bd = $$.bid.bd;
            $$.bid.bd_reduits = get_bid_reduits($$.bid.bd);
            return parentScope.bid.bd_reduits = $$.bid.bd_reduits;
          } else {
            $$.modifs.bd = get_modifs();
            parentScope.mdf.bd = $$.modifs.bd;
            $$.modifs.bd_reduits = get_modifs_reduits($$.modifs.bd);
            return parentScope.mdf.bd_reduits = $$.modifs.bd_reduits;
          }
        } else if ((ref1 = args.rdio_dv) === 'v' || ref1 === 'p' || ref1 === 'w' || ref1 === 'm' || ref1 === 'o' || ref1 === 'at') {
          a = args.rdio_dv;
          $$.rdio_dv = a;
          $$.titre1 = '[dp]';
          $$.modifs = {
            chk_aff_xy: false,
            aff_xy: [],
            bd: [],
            bd_reduits: []
          };
          $$.bid = {
            aff_xy: [],
            bd: [],
            bd_reduits: []
          };
          if (a === 'v') {
            $$.titre1 = '[dv]';
          } else if (a === 'w') {
            $$.titre1 = '[w]';
          } else if (a === 'o') {
            $$.titre1 = '[o]';
          } else if (a === 'at') {
            $$.titre1 = '[at]';
          } else if (a === 'm') {
            $$.titre1 = '[m]';
            $$.rdio_dv = 'm';
          }
          $$.dddp = parentScope.dddp;
          if ($$.psc.bd_regies != null) {
            show('1');
          } else {
            show('2');
          }
          $$.bd_regies = get_all_regies_or_games('Regies');
          $$.bd_jeux = get_all_regies_or_games('Jeux');
          $$.regies_select = 'marge';
          $$.bid.bd = $$.bid.aff_xy = $$.bid.bd_reduits = [];
          $$.modifs.bd = $$.modifs.aff_xy = $$.modifs.bd_reduits = [];
          $$.show_bid = $$.mdf_show = false;
          $$.chk_top_var = $$.chk_area = true;
          $$.chk_mrg_glob = false;
          show('3');
          init_graph();
          return $$.$apply();
        }
      } catch (error1) {
        error = error1;
        return console.log(error.message + ' on :parentScope.$on : ' + error.name + ' ; traitée...');
      }
    });
    $$.but = 'marge';
    $$.titreh3 = 'Marges globales quotidiennes';
    $$.regies_select = 'marge';
    col_var = ['#ff0333', '#009900', '#808080', '#6600ff', '#000333', '#ffff00', '#0333ff', '#ff5500', '#99ff99', '#66ffff', '#ff33cc', '#cc0033'];
    $$.set_cursor = function(cr, time) {
      var set_end_filtre;
      if (time == null) {
        time = 4000;
      }
      set_end_filtre = function() {
        return $$.set_cursor('raz_cursor');
      };
      if ((cr === 'wait' || cr === 'regie' || cr === 'dte') && cursor_waiting_for === '') {
        $$.class_cursor = 'cursor_wait';
        cursor_waiting_for = cr;
        return $timeout(set_end_filtre(), time);
      } else if (cr === cursor_waiting_for) {
        $$.class_cursor = 'cursor_auto';
        return cursor_waiting_for = '';
      } else if (cr === 'raz_cursor') {
        $$.class_cursor = 'cursor_auto';
        return cursor_waiting_for = '';
      } else if (cr === 'auto' && cursor_waiting_for === 'wait') {
        $$.class_cursor = 'cursor_auto';
        return cursor_waiting_for = '';
      } else if (cr === 'end_regie' && cursor_waiting_for === 'regie') {
        $$.class_cursor = 'cursor_auto';
        return cursor_waiting_for = '';
      }
    };
    $$.xy_change_begining_prd = function(n_days) {
      $$.dddp = parentScope.dte_n_jours_avant(new Date(parentScope.dddr), n_days);
      parentScope.dddp = $$.dddp;
      parentScope.get_bilan();
      $$.regies_select = 'marge';
      $$.bd_regies = get_all_regies_or_games('Regies');
      $$.bd_jeux = get_all_regies_or_games('Jeux');
      parentScope.mdf.show = false;
      $$.modifs.bd = parentScope.mdf.bd = [];
      $$.psc.bazinga_scroll("id_section_xy", 100);
      return init_graph();
    };
    $$.maj_bd = function($$, $http, fle, v1, v2) {
      if (v2 == null) {
        v2 = '2015-07-28';
      }
      return $http.post(fle, {
        but: v1,
        date_1: v2
      }).success(function(response, status, headers, config, v1) {
        return $$.bd = response;
      });
    };
    AmCharts.loadJSON = function(url, but, date_1, v_ou_p) {
      var request, t;
      if (but == null) {
        but = 'marge';
      }
      if (date_1 == null) {
        date_1 = '2016-07-28';
      }
      if (v_ou_p == null) {
        v_ou_p = 'v';
      }
      if (window.XMLHttpRequest) {
        request = new XMLHttpRequest();
      } else {
        request = new ActiveXObject("Microsoft.XMLHTTP");
      }
      request.open("POST", url, false);
      request.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      request.send("but=" + but + '&v_ou_p=' + v_ou_p + "&date_1=" + date_1);
      t = JSON.parse(request.responseText);
      return t;
    };
    zoomChart = function() {
      return chart_lgn.zoomToIndexes(0, chart_lgn.dataProvider.length - 1);
    };
    handleRender = function(e) {};
    handleDataUpdated = function(e) {};
    def_chart = function(dom) {
      var xy;
      xy = AmCharts.makeChart(dom, {
        type: "serial",
        listeners: [
          {
            "event": "rendered",
            "method": handleRender
          }, {
            "event": "dataUpdated",
            "method": handleDataUpdated
          }
        ],
        theme: "light",
        autoMargins: true,
        autoMarginOffset: 0,
        startDuration: 0.4,
        startEffect: "easeOutSine",
        thousandsSeparator: " ",
        dataDateFormat: "YYYY-MM-DD",
        fontSize: 10,
        "export": {
          enabled: true,
          fileName: "Dash-Board",
          position: "top-right",
          legend: {
            position: "bottom"
          },
          libs: {
            path: "amc/plugins/export/libs/"
          },
          menu: [
            {
              "class": "export-main",
              menu: [
                {
                  label: "Télécharger une image",
                  menu: ["PNG", "JPG", "PDF"]
                }, {
                  label: "Télécharger les données",
                  menu: ["CSV", "XLSX", "JSON"]
                }, {
                  label: "Imprimer",
                  format: "PRINT"
                }
              ]
            }
          ]
        },
        valueAxes: [
          {
            id: "Marge",
            axisAlpha: 1,
            position: "left",
            title: "Marges"
          }, {
            "id": "Nb_clics",
            "gridAlpha": 0,
            "axisAlpha": 1,
            "position": 'right',
            "title": "Nb clics / 1000"
          }
        ],
        categoryAxes: {
          gridPosition: "start",
          title: "Periode"
        },
        balloon: {
          borderThickness: 1,
          shadowAlpha: 0,
          cornerRadius: 4,
          fillColor: "#333333",
          fillAlpha: .02
        },
        legend: {
          fontSize: 5,
          verticalGap: 5,
          horizontalGap: 0,
          useGraphSettings: true
        },
        graphs: [],
        chartScrollbar: {
          graph: "Marge",
          resizeEnabled: true,
          oppositeAxis: false,
          offset: 30,
          scrollbarHeight: 40,
          backgroundAlpha: 0,
          selectedBackgroundAlpha: 0.1,
          selectedBackgroundColor: '#0333ff',
          graphFillAlpha: .4,
          graphLineAlpha: 0.5,
          selectedGraphFillAlpha: 0,
          selectedGraphLineAlpha: 1,
          autoGridCount: true,
          color: '#000000'
        },
        chartCursor: {
          pan: true,
          valueLineEnabled: true,
          valueLineBalloonEnabled: true,
          cursorAlpha: 0.2,
          valueLineAlpha: 0.3,
          bulletSize: 6,
          categoryBalloonDateFormat: "DD-MM",
          color: '#000000',
          categoryBalloonColor: '#0333ff',
          categoryBalloonAlpha: 0.25
        },
        categoryField: "Date",
        categoryAxis: {
          parseDates: true,
          dashLength: 1,
          minorGridEnabled: true
        }
      });
      return xy;
    };
    $$.change_dv = function() {
      var val_to_broadcast;
      parentScope.rdio_dv = $$.rdio_dv;
      val_to_broadcast = {
        date_0: parentScope.date_0,
        date_2: parentScope.date_2,
        dte_select: parentScope.dte_select,
        rdio_dv: parentScope.rdio_dv
      };
      $$.chk_top_var = $$.chk_area = true;
      $$.chk_mrg_glob = false;
      parentScope.$broadcast('broadcast_from_parent_to_pie', val_to_broadcast);
      parentScope.change_2_dates();
      parentScope.get_bilan();
      $$.regies_select = 'marge';
      $$.bd_regies = get_all_regies_or_games('Regies');
      $$.bd_jeux = get_all_regies_or_games('Jeux');
      init_graph();
      parentScope.mdf.show = parentScope.show_bid = false;
      parentScope.mdf.bd_aff = parentScope.mdf.bd_reduits;
      parentScope.mdf.show_one_cmp = false;
      parentScope.bid.bd_aff = parentScope.bid.bd_reduits;
      parentScope.mdf.bd = [];
      parentScope.bid.bd = [];
      $$.modifs = {
        chk_aff_xy: false,
        aff_xy: [],
        bd: [],
        bd_reduits: []
      };
      $$.bid = {
        aff_xy: [],
        bd: [],
        bd_reduits: []
      };
      $$.chk_top_var = $$.chk_area = true;
      $$.chk_mrg_glob = false;
      parentScope.$apply();
      if ($$.rdio_dv === 'v') {
        $$.titre1 = '[dv]';
      } else if ($$.rdio_dv === 'p') {
        $$.titre1 = '[dp]';
      } else if ($$.rdio_dv === 'w') {
        $$.titre1 = '[w]';
      } else if ($$.rdio_dv === 'm') {
        $$.titre1 = '[m]';
      } else if ($$.rdio_dv === 'o') {
        $$.titre1 = '[o]';
      } else if ($$.rdio_dv === 'at') {
        $$.titre1 = '[m]';
      }
      $$.top_3 = [];
      return $$.rdio_lgn = 'aires';
    };
    get_all_regies_or_games = function(what) {
      var k, len, len1, m, t, u, x;
      if (what == null) {
        what = 'Regies';
      }
      u = [];
      t = [];
      if (what === 'Regies') {
        if (backup_db.existe(mBackUp('xy_regies'))) {
          u = backup_bd.get(mBackUp('xy_regies'));
        } else {
          t = AmCharts.loadJSON(ajx_fl, 'toutes_les_regies', $$.dddp, $$.rdio_dv);
          for (k = 0, len = t.length; k < len; k++) {
            x = t[k];
            u.push({
              value: "regie~" + x.Regies,
              aire: 'A~' + x.Regies,
              name: x.Regies
            });
          }
          backup_db.push(mBackUp('xy_regies'), u);
        }
      } else if (what === 'Jeux') {
        if (backup_db.existe(mBackUp('xy_jeux'))) {
          u = backup_bd.get(mBackUp('xy_jeux'));
        } else {
          t = AmCharts.loadJSON(ajx_fl, 'tous_les_jeux', $$.dddp, $$.rdio_dv);
          for (m = 0, len1 = t.length; m < len1; m++) {
            x = t[m];
            u.push({
              value: 'jeu' + '~' + x.Jeux,
              name: x.Jeux
            });
          }
          backup_db.push(mBackUp('xy_jeux'), u);
        }
      }
      return u;
    };
    def_graph = function(g_id, bd_name, color, type, id_axes) {
      var dashLength, g, title;
      if (type == null) {
        type = {};
      }
      if (id_axes == null) {
        id_axes = 'Marge';
      }
      if (type.title != null) {
        title = type.title;
      } else {
        title = bd_name;
      }
      if (type.dashLength != null) {
        dashLength = type.dashLength;
      } else {
        dashLength = 0;
      }
      if (type.coul != null) {
        color = type.coul;
      }
      g = new AmCharts.AmGraph();
      g.id = g_id;
      g.bullet = "diamond";
      g.lineColor = color;
      g.title = title;
      g.negativeLineColor = coulxy[0];
      g.bulletBorderAlpha = 0;
      g.bulletSize = 1;
      g.bulletBorderColor = "#FFFFFF";
      g.bulletBorderThickness = 0;
      g.hideBulletsCount = 1;
      g.lineThickness = 3;
      g.type = "smoothedLine";
      g.valueField = bd_name;
      g.valueAxis = id_axes;
      g.balloonText = "<div style='margin:2px; font-size:11px;'>[[title]] : [[value]]</div>";
      g.markerType = "diamond";
      g.dashLength = dashLength;
      return g;
    };
    def_graph_modifs = function(g_id, bd_name, color, type, id_axes) {
      var g;
      if (type == null) {
        type = {};
      }
      if (id_axes == null) {
        id_axes = 'Marge';
      }
      if (type.coul != null) {
        color = type.coul;
      }
      g = new AmCharts.AmGraph();
      g.id = g_id;
      g.type = 'line';
      g.lineAlpha = 0;
      g.bullet = type.forme;
      g.valueField = bd_name;
      g.bulletSizeField = type.bullet_size_field;
      g.bulletBorderAlpha = 0.8;
      g.bulletAlpha = 0.2;
      g.bulletColor = type.coul_bbl;
      g.descriptionField = type.description_field;
      g.valueAxis = id_axes;
      g.dashLength = type.dashLength;
      g.title = type.title;
      g.balloonText = "<div style='margin:2px; font-size:11px;'>[[description]] </div>";
      return g;
    };
    def_graph_area = function(g_id, bd_name, type, id_axes) {
      var g;
      if (id_axes == null) {
        id_axes = 'Marge';
      }
      g = new AmCharts.AmGraph();
      g.id = g_id;
      g.bullet = "round";
      g.lineColor = type.coul;
      g.title = bd_name;
      g.bulletBorderAlpha = 0;
      g.bulletBorderThickness = 1;
      g.hideBulletsCount = 1;
      g.lineThickness = 1;
      g.type = "smoothedLine";
      g.valueField = bd_name;
      g.valueAxis = id_axes;
      g.showBalloon = false;
      g.markerType = "circle";
      g.fillAlphas = 1;
      g.fillToAxis = "x";
      return g;
    };
    hier = function(dte) {
      return parentScope.hier(new Date(dte)).toLocaleString().slice(0, 10);
    };
    get_bd_graph = function(nm, type, dv_dp) {
      var bi, c, i, j, k, l, len, m, ref, ref1, s, y;
      if (nm == null) {
        nm = 'marge';
      }
      if (type == null) {
        type = {};
      }
      if (!$$.bd_graph2) {
        $$.bd_graph2 = AmCharts.loadJSON(ajx_fl, nm, $$.dddp, dv_dp);
        $$.bd_graph_map.push({
          Name: nm,
          Dv: dv_dp
        });
        $$.bd_graph_map.push({
          Name: "Nb_clics",
          Dv: dv_dp
        });
        return $$.bd_graph2;
      }
      ref = $$.bd_graph_map;
      for (k = 0, len = ref.length; k < len; k++) {
        y = ref[k];
        if (y.Name === nm && y.Dv === dv_dp) {
          return $$.bd_graph2;
        }
      }
      $$.serr = [];
      $$.serr = AmCharts.loadJSON(ajx_fl, nm, $$.dddp, dv_dp);
      $$.bd_graph_map.push({
        Name: nm,
        Dv: dv_dp
      });
      i = 0;
      s = $$.serr;
      if (s.length === 0) {
        s = [];
        s.push({
          Date: $$.bd_graph2.Date,
          Marge: 0,
          Nb_clics: 0,
          IdCamp: nm
        });
      }
      l = $$.bd_graph2.length;
      j = 0;
      for (i = m = 0, ref1 = l - 1; 0 <= ref1 ? m <= ref1 : m >= ref1; i = 0 <= ref1 ? ++m : --m) {
        bi = $$.bd_graph2[i];
        if ((s[j] != null) && (s[j].Marge != null) && (s[j].Date != null)) {
          if (bi.Date === s[j].Date) {
            bi[nm] = s[j].Marge;
            if (s[j] != null) {
              j++;
            }
          } else if (bi.Date > s[j].Date) {
            bi[nm] = s[j].Marge;
            if (s[j] != null) {
              j++;
            }
          } else if (bi.Date < s[j].Date) {
            bi[nm] = 0;
          }
        } else {
          bi[nm] = 0;
        }
      }
      switch (type.type) {
        case 'ligne':
          l = chart_lgn.graphs.length;
          c = coulxy[l % coulxy.length];
          chart_lgn.addGraph(def_graph(l, nm, c, type));
          break;
        case 'variation':
          type.coul = col_var[type.index % col_var.length];
          chart_lgn.addGraph(def_graph('', nm, '#0333ff', type));
          break;
        case 'modifs':
          type.coul = col_var[type.index % col_var.length];
          chart_lgn.addGraph(def_graph_modifs('', nm, '#0333ff', type));
          break;
        case 'area':
          return chart_lgn.addGraph(def_graph_area(l, nm, type));
      }
      return $$.bd_graph2;
    };
    $$.area_or_var = function() {
      return init_graph();
    };
    validate_data = function() {
      chart_lgn.validateData();
      return zoomChart();
    };
    $$.add_xy = function(rg, type, in_xy) {
      if (in_xy == null) {
        in_xy = false;
      }
      return $timeout($$.psc.show_pgs2).then(function() {
        var cb, ref, rg2;
        $$.psc.show_menu = true;
        $$.set_cursor('wait', 20000);
        if (typeof rg === 'object') {
          rg2 = rg[0];
        } else {
          rg2 = rg;
        }
        if (indexOf.call(active_graphs, rg2) >= 0) {
          $$.psc.change_scope(true, 'graph_lgn', 125);
          $$.set_cursor('raz_cursor');
          $$.psc.hide_pgs2();
          return;
        }
        chart_lgn.dataProvider = get_bd_graph(rg, type, $$.rdio_dv);
        validate_data();
        if ((ref = type.type) === 'ligne' || ref === 'variation' || ref === 'marge') {
          active_graphs.push(rg2);
        }
        if (rg === 'marge' || type === 'area') {
          $$.titreh3 = 'Marges globales quotidiennes';
        } else {
          if (type.title != null) {
            rg = type.title;
          }
          $$.titreh3 = " Dernières Marges affichées :  " + rg;
        }
        cb = function() {
          $$.psc.show_menu = false;
          $$.psc.hide_pgs2();
          $$.set_cursor('raz_cursor');
          if (in_xy) {
            $$.psc.change_scope(true, 'graph_lgn', -180);
          }
        };
        $timeout(cb, 4000);
      });
    };
    get_autre_modif_id = function(id, type) {
      var bb, k, len, len1, m, ref, ref1;
      if (type === 'bid') {
        ref = $$.bid.bd_reduits;
        for (k = 0, len = ref.length; k < len; k++) {
          bb = ref[k];
          if (parseFloat(bb.IdCamp) === parseFloat(id)) {
            return bb;
          }
        }
        return false;
      }
      if (type === 'mdf') {
        ref1 = $$.modifs.bd_reduits;
        for (m = 0, len1 = ref1.length; m < len1; m++) {
          bb = ref1[m];
          if (parseFloat(bb.IdCamp) === parseFloat(id)) {
            return bb;
          }
        }
      }
      return false;
    };
    $$.add_xy_modifs = function(nom, type) {
      var cB, cV, disp_bubbles, fst, oth, t2;
      cV = coulxy[7];
      cB = coulxy[8];
      if (type.mdf_or_bid === 'mdf') {
        fst = 'mdf';
        oth = 'bid';
      } else {
        fst = 'bid';
        oth = 'mdf';
      }
      t2 = Object.create(type);
      disp_bubbles = function(bbl) {
        var br, br_Date, itemp, k, len, mm, ref, ref1, ref2;
        br = get_autre_modif_id(nom.split('~')[1], oth);
        if (type.forme === 'circle') {
          t2.forme = 'square';
        } else {
          t2.forme = 'circle';
        }
        if (type.coul === cB) {
          t2.coul_bbl = t2.coul = cV;
        } else {
          t2.coul_bbl = t2.coul = cB;
        }
        if (br) {
          br_Date = br.Date.split('\n');
        }
        t2.type = 'ligne';
        t2.dashLength = 0;
        itemp = 0;
        ref = $$.bd_graph2;
        for (k = 0, len = ref.length; k < len; k++) {
          mm = ref[k];
          mm[nom + ("~" + bbl + "~val")] = mm[nom];
          if (br) {
            mm["sqr~val"] = mm[nom];
          }
          if (ref1 = mm.Date, indexOf.call(type.date_mdf, ref1) >= 0) {
            mm[nom + ("~" + bbl + "~size")] = 25;
            mm[nom + ("~" + bbl + "~description")] = type.Modif[itemp++];
          } else {
            mm[nom + ("~" + bbl + "~size")] = 0;
          }
          if (br) {
            if (ref2 = mm.Date, indexOf.call(br_Date, ref2) >= 0) {
              mm['sqr~size'] = 25;
              mm['sqr~description'] = t2.Modif[itemp++];
            } else {
              mm['sqr~size'] = 0;
            }
          }
        }
        type.bullet_size_field = nom + ("~" + bbl + "~size");
        type.description_field = nom + ("~" + bbl + "~description");
        if (br) {
          t2.bullet_size_field = 'sqr~size';
          t2.description_field = 'sqr~description';
        }
        chart_lgn.addGraph(def_graph_modifs(nom + ("~" + bbl), nom + ("~" + bbl + "~val"), cB, type));
        if (br) {
          chart_lgn.addGraph(def_graph_modifs('sqr~val', 'sqr~val', cV, t2));
        }
        return chart_lgn.addGraph(def_graph_modifs('sqr~val', 'sqr~val', '#0333ff', t2));
      };
      if (!(indexOf.call(active_graphs, nom) >= 0)) {
        active_graphs.push(nom);
      }
      $$.set_cursor('end_regie');
      chart_lgn.dataProvider = get_bd_graph(nom, type, $$.rdio_dv);
      disp_bubbles('type.mdf_or_bid');
      chart_lgn.dataProvider = $$.bd_graph2;
      if (type.title != null) {
        nom = type.title;
      }
      $$.titreh3 = " MODIFICATION de :  " + nom;
      validate_data();
      return $$.set_cursor('raz_cursor');
    };
    $$.add_aire = function() {
      var i, k, len, m, ref, ref1, x2;
      for (i = k = 0, ref = $$.bd_regies.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {
        ref1 = $$.bd_graph2;
        for (m = 0, len = ref1.length; m < len; m++) {
          x2 = ref1[m];
          if (i === 0) {
            x2[$$.bd_regies[i].aire] = (parseFloat(x2[$$.bd_regies[i].value])).toFixed(0);
          } else {
            x2[$$.bd_regies[i].aire] = (parseFloat(x2[$$.bd_regies[i].value]) + parseFloat(x2[$$.bd_regies[i - 1].aire])).toFixed(0);
          }
        }
      }
      return $$.titreh3 = 'Marges globales quotidiennes';
    };
    coul = function(rg, ind) {
      var l;
      if (rg.lastIndexOf('TJ') > -1) {
        return coulxy[20];
      } else if (rg.indexOf('FY') > -1) {
        return coulxy[23];
      } else if (rg.indexOf('TP') > -1) {
        return coulxy[22];
      } else if (rg.indexOf('TRIAL') > -1) {
        return coulxy[22];
      } else if (rg.indexOf('promo') > -1) {
        return coulxy[24];
      }
      l = coulxy.length;
      return coulxy[l - 1 - (ind % 8)];
    };
    $$.top_var = function(nb, n_drop) {
      var bd, e, foo, i, k, m, nme_tmp, ref, ref1, results, t3, type;
      if (n_drop == null) {
        n_drop = 10;
      }
      foo = wait_for_array_ms(parentScope.bd_var_abs);
      bd = parentScope.bd_var_abs;
      if (n_drop > bd.length) {
        n_drop = bd.length - 1;
      }
      $$.top_3 = [];
      for (i = k = 0, ref = n_drop - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {
        if (bd[i] != null) {
          $$.top_3.push({
            name: 'camp~' + bd[i].idCamp,
            value: 'camp~' + bd[i].idCamp,
            idCamp: bd[i].idCamp,
            Jeu: bd[i].Jeu,
            Regie: bd[i].Regie,
            Camp: bd[i].Camp
          });
        }
      }
      type = {};
      type.type = 'variation';
      type.dashLength = 2;
      try {
        results = [];
        for (i = m = 0, ref1 = nb - 1; 0 <= ref1 ? m <= ref1 : m >= ref1; i = 0 <= ref1 ? ++m : --m) {
          if (bd[i] != null) {
            nme_tmp = bd[i].Regie + '[' + bd[i].Camp + ']' + bd[i].Jeu;
          }
          t3 = $$.top_3[i];
          type.coul = col_var[i];
          type.index = i;
          type.title = nme_tmp;
          if (t3 != null) {
            results.push($$.add_xy(t3.name, type));
          } else {
            results.push(void 0);
          }
        }
        return results;
      } catch (error1) {
        e = error1;
        return console.log(e.message + ' on : top_var :  ' + e.name + ' ; traitée...');
      }
    };
    $$.top_var_clic = function(nb, n_drop) {
      var bd, e, i, k, m, ref, ref1, results, t3, type;
      if (n_drop == null) {
        n_drop = 10;
      }
      try {
        bd = parentScope.bd_var_abs_clic;
        if (n_drop > bd.length) {
          n_drop = bd.length - 1;
        }
        $$.top_3 = [];
        for (i = k = 0, ref = n_drop - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {
          $$.top_3.push({
            name: 'camp~' + bd[i].idCamp,
            value: 'camp~' + bd[i].idCamp,
            idCamp: bd[i].idCamp,
            Jeu: bd[i].Jeu,
            Regie: bd[i].Regie,
            Camp: bd[i].Camp
          });
        }
        type = {};
        type.type = 'variation';
        type.dashLength = 2;
        results = [];
        for (i = m = 0, ref1 = nb - 1; 0 <= ref1 ? m <= ref1 : m >= ref1; i = 0 <= ref1 ? ++m : --m) {
          t3 = $$.top_3[i];
          type.coul = col_var[i];
          type.index = i;
          results.push($$.add_xy(t3.name, type));
        }
        return results;
      } catch (error1) {
        e = error1;
        console.log(e.message + {
          '  initial2 : top_var_click  ': '+ e.name + '
        });
        return ' ; traitée...';
      }
    };
    graph_exists = function(name) {
      return indexOf.call(active_graphs, name) >= 0;
    };
    $$.xy_bg_color = function(name) {
      if (graph_exists(name)) {
        return '#e5e5ff';
      } else {
        return '#00333';
      }
    };
    $$.xy_bg_color_2 = function(name) {
      if (graph_exists(name)) {
        return 'xy_graph_exists';
      } else {
        return 'xy_graph_not_exists';
      }
    };
    mrg_glob_dv = function(dv_dp) {
      var cl;
      switch (dv_dp) {
        case 'v':
          cl = col_var[3];
          break;
        case 'p':
          cl = col_var[10];
          break;
        case 'w':
          cl = col_var[7];
          break;
        case 'm':
          cl = col_var[1];
          break;
        case 'o':
          cl = col_var[6];
          break;
        case 'at':
          cl = col_var[2];
          break;
        default:
          cl = col_var[0];
      }
      chart_lgn.dataProvider = get_bd_graph('marge', {}, dv_dp);
      if ($$.chk_mrg_glob) {
        chart_lgn.addGraph(def_graph('Mrg' + base_name(dv_dp), 'Mrg' + base_name(dv_dp), cl));
      }
      return validate_data();
    };
    $$.change_mrg_glob = function() {
      if ($$.chk_mrg_glob) {
        mrg_glob_dv('w');
        mrg_glob_dv('p');
        mrg_glob_dv('v');
        mrg_glob_dv('o');
        mrg_glob_dv('at');
        return $$.set_cursor('auto');
      } else {
        return init_graph();
      }
    };
    init_graph = function() {
      var bd, i, k, m, ref, ref1;
      show('4');
      $$.bd_graph_map = [];
      chart_lgn.graphs = [];
      active_graphs = [];
      $$.dddp = parentScope.dddp;
      mrg_glob_dv($$.rdio_dv);
      for (i = k = 0, ref = $$.bd_regies.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {
        get_bd_graph($$.bd_regies[i].value, {
          type: 'aires',
          coul: '#ff0333',
          alpha: 'nothing'
        }, $$.rdio_dv);
      }
      if ($$.chk_area) {
        $$.add_aire();
        for (i = m = ref1 = $$.bd_regies.length - 1; m >= 0; i = m += -1) {
          bd = $$.bd_regies[i].aire;
          chart_lgn.addGraph(def_graph_area(bd, bd, {
            type: 'aires',
            alpha: 0,
            coul: coul(bd, i)
          }));
        }
        if ($$.chk_top_var) {
          $$.top_var(3);
        }
        if ($$.chk_top_var_clic) {
          $$.top_var_clic(3);
        }
      }
      if ($$.chk_top_var && !$$.chk_area) {
        $$.top_var(3);
      }
      if ($$.modifs.chk_aff_xy) {
        $$.add_xy_modifs($$.modifs.aff_xy[0].name, $$.modifs.aff_xy[0]);
      }
      if ($$.chk_mrg_glob) {
        $$.change_mrg_glob();
      }
      if ($$.chk_area) {
        chart_lgn.addGraph(def_graph(chart_lgn.graphs.length, 'Nb_clics', '#0bde33', {}, 'Nb_clics'));
      }
      validate_data();
      $$.set_cursor('auto');
      return parentScope.test = $$.bd_graph2;
    };
    chart_lgn = def_chart("chart_lgn");
    get_modifs = function() {
      var bdm, k, len, len1, len2, len3, m, o, p, ref, ref1, t, v_abs, y, z;
      $$.modifs.bd = [];
      bdm = AmCharts.loadJSON(ajx_fl, 'modifs', $$.dddp, $$.rdio_dv);
      for (k = 0, len = bdm.length; k < len; k++) {
        y = bdm[k];
        if ((y.Camp != null) && y.Camp.lastIndexOf('(') > 0) {
          y.Camp = y.Camp.slice(y.Camp.lastIndexOf("(") + 1, y.Camp.lastIndexOf(")"));
        } else {
          ref = ['premium', 'www', 'excluding', 'KITTY - FYBER'];
          for (m = 0, len1 = ref.length; m < len1; m++) {
            z = ref[m];
            if ((y.Camp != null) && y.Camp.lastIndexOf(z) > 0) {
              y.Camp = z;
            }
          }
        }
      }
      for (o = 0, len2 = bdm.length; o < len2; o++) {
        t = bdm[o];
        ref1 = ['WW, excluding live countries', 'Global', 'KITTY - FYBER'];
        for (p = 0, len3 = ref1.length; p < len3; p++) {
          z = ref1[p];
          if (t.Camp === z) {
            t.Camp = 'www';
          }
        }
        t.IdCamp = parseFloat(t.IdCamp);
        t.Moy_mrg_clc_avt = t.avg_mrg_avant / t.avg_clc_avant;
        t.Moy_mrg_clc_aps = t.avg_mrg_apres / t.avg_clc_apres;
        t.Date = t.Date.slice(0, 10);
        if (t.avg_mrg_avant < 0) {
          v_abs = -t.avg_mrg_avant;
        } else {
          v_abs = t.avg_mrg_avant;
        }
        t.bilan_mrg = (t.avg_mrg_apres - t.avg_mrg_avant) / v_abs;
        if (t.Moy_mrg_clc_avt < 0) {
          v_abs = -t.Moy_mrg_clc_avt;
        } else {
          v_abs = t.Moy_mrg_clc_avt;
        }
        t.bilan_mrg_clc = (t.Moy_mrg_clc_aps - t.Moy_mrg_clc_avt) / v_abs;
        if (isNaN(t.bilan_mrg) || (parseFloat(t.avg_mrg_avant) === 0) || (!t.bilan_mrg) || (!t.bilan_mrg_clc)) {
          t.bilan_mrg = -1e9;
        }
        t.ng_model = false;
        t.shw_id = 'no';
        $$.set_cursor('raz_cursor');
      }
      return bdm;
    };
    get_modifs_reduits = function(bd) {
      var bdr, i, k, l, len, t, trouve;
      $$.modifs.bd_reduits = bdr = [];
      for (k = 0, len = bd.length; k < len; k++) {
        t = bd[k];
        if (bdr.length === 0) {
          bdr.push({
            foo: 0
          });
          angular.copy(t, bdr[0]);
        } else {
          l = bdr.length;
          i = 0;
          trouve = false;
          while (i < l) {
            if (bdr[i].IdCamp === t.IdCamp) {
              bdr[i].aff = bdr[i].Modif = bdr[i].Modif + "\n ----- * ----- \n" + t.Modif;
              bdr[i].Date = bdr[i].Date + "\n" + t.Date;
              trouve = true;
              break;
            }
            i++;
          }
          if (!trouve) {
            bdr.push({
              foo: 0
            });
            angular.copy(t, bdr[l]);
          }
        }
      }
      return bdr;
    };
    $$.aff_modifs = function() {
      var k, len, len1, m, md, ref, ref1;
      parentScope.mdf.show = !parentScope.mdf.show;
      if (!(parentScope.mdf.show || parentScope.bid.show)) {
        parentScope.mdf.show_one_cmp = false;
      }
      if (parentScope.mdf.show) {
        if ($$.modifs.bd == null) {
          $$.modifs.bd = get_modifs();
          $$.modifs.bd_reduits = get_modifs_reduits($$.modifs.bd);
        } else if ($$.modifs.bd.length === 0) {
          $$.modifs.bd = get_modifs();
          $$.modifs.bd_reduits = get_modifs_reduits($$.modifs.bd);
        }
        $$.psc.show_menu = false;
        $$.psc.bazinga_scroll("id_section_xy", $$.psc.bzg.mdf_xy);
      } else {
        $$.modifs.chk_aff_xy = false;
        ref = $$.modifs.bd;
        for (k = 0, len = ref.length; k < len; k++) {
          md = ref[k];
          if (md.shw_id !== 'no') {
            md.shw_id = 'no';
          }
        }
        ref1 = $$.modifs.bd_reduits;
        for (m = 0, len1 = ref1.length; m < len1; m++) {
          md = ref1[m];
          if (md.shw_id !== 'no') {
            md.shw_id = 'no';
          }
        }
        if (!parentScope.mdf.show && !parentScope.bid.show) {
          parentScope.rdio_action = "70";
        }
      }
      if ($$.bid.bd == null) {
        $$.bid.bd = get_bid();
        $$.bid.bd_reduits = get_bid_reduits($$.bid.bd);
      }
      parentScope.bid.bd = $$.bid.bd;
      parentScope.bid.bd_reduits = $$.bid.bd_reduits;
      parentScope.mdf.bd = $$.modifs.bd;
      parentScope.mdf.bd_reduits = $$.modifs.bd_reduits;
      return parentScope.chk_mdf_click(true);
    };
    show_modifs_bid_xy = function(mdf) {
      var c1, c2, description, frm, nme;
      nme = 'camp~' + mdf.IdCamp;
      if (mdf.mdf_or_bid === 'mdf') {
        c2 = coulxy[13];
        c1 = coulxy[7];
        frm = 'circle';
      } else {
        c2 = coulxy[14];
        c1 = coulxy[8];
        frm = 'square';
      }
      description = {
        mdf_or_bid: mdf.mdf_or_bid,
        name: nme,
        type: 'ligne',
        dashLength: 0,
        coul: c1,
        coul_bbl: c1,
        forme: frm,
        index: 3,
        title: mdf.IdCamp + " - " + mdf.Regie + "[" + mdf.Camp + "]" + mdf.Jeu,
        date_mdf: mdf.Date.split('\n'),
        Modif: mdf.Modif.split('\n ----- * ----- \n')
      };
      $$.modifs.chk_aff_xy = true;
      $$.chk_top_var = false;
      $$.chk_area = false;
      $$.chk_mrg_glob = false;
      $$.titreh3 = "Modification en date du " + mdf.Date.slice(0, 10) + " pour " + description.title;
      $$.$apply();
      return $$.modifs.aff_xy[0] = description;
    };
    get_bid = function() {
      var bdm, k, len, len1, len2, len3, m, o, p, ref, ref1, t, tmp, v_abs, y, z;
      $$.bid.bd = [];
      bdm = AmCharts.loadJSON(ajx_fl, 'modifs_bid', $$.dddp, $$.rdio_dv);
      for (k = 0, len = bdm.length; k < len; k++) {
        y = bdm[k];
        if ((y.Camp != null) && y.Camp.lastIndexOf('(') > 0) {
          y.Camp = y.Camp.slice(y.Camp.lastIndexOf("(") + 1, y.Camp.lastIndexOf(")"));
        } else {
          ref = ['premium', 'www', 'excluding', 'KITTY - FYBER'];
          for (m = 0, len1 = ref.length; m < len1; m++) {
            z = ref[m];
            if ((y.Camp != null) && y.Camp.lastIndexOf(z) > 0) {
              y.Camp = z;
            }
          }
        }
      }
      for (o = 0, len2 = bdm.length; o < len2; o++) {
        t = bdm[o];
        ref1 = ['WW, excluding live countries', 'Global', 'KITTY - FYBER'];
        for (p = 0, len3 = ref1.length; p < len3; p++) {
          z = ref1[p];
          if (t.Camp === z) {
            t.Camp = 'www';
          }
        }
        t.IdCamp = parseFloat(t.IdCamp);
        t.Moy_mrg_clc_avt = t.avg_mrg_avant / t.avg_clc_avant;
        t.Moy_mrg_clc_aps = t.avg_mrg_apres / t.avg_clc_apres;
        t.Date = t.Date.slice(0, 10);
        if (t.avg_mrg_avant < 0) {
          v_abs = -t.avg_mrg_avant;
        } else {
          v_abs = t.avg_mrg_avant;
        }
        t.bilan_mrg = (t.avg_mrg_apres - t.avg_mrg_avant) / v_abs;
        if (t.Moy_mrg_clc_avt < 0) {
          v_abs = -t.Moy_mrg_clc_avt;
        } else {
          v_abs = t.Moy_mrg_clc_avt;
        }
        t.bilan_mrg_clc = (t.Moy_mrg_clc_aps - t.Moy_mrg_clc_avt) / v_abs;
        t.bilan_bid = (t.New_bid - t.Old_bid) / t.Old_bid;
        if (isNaN(t.bilan_mrg) || (parseFloat(t.avg_mrg_avant) === 0) || (!t.bilan_mrg) || (!t.bilan_mrg_clc)) {
          t.bilan_mrg = -1e9;
        }
        tmp = '';
        if (t.Old_bid !== "") {
          tmp = "Old BID:" + t.Old_bid;
        }
        if (t.New_bid !== "") {
          tmp += " - new BID:" + t.New_bid;
        }
        if (t.Modif !== "") {
          if (tmp !== '') {
            tmp += '\n';
          }
          tmp += " Commentaire : " + t.Modif;
        }
        t.Modif = tmp;
      }
      return bdm;
    };
    get_bid_reduits = function(bd) {
      var bdr, i, k, l, len, t, trouve;
      $$.bid.bd_reduits = bdr = [];
      for (k = 0, len = bd.length; k < len; k++) {
        t = bd[k];
        if (bdr.length === 0) {
          bdr.push({
            foo: 0
          });
          angular.copy(t, bdr[0]);
        } else {
          l = bdr.length;
          i = 0;
          trouve = false;
          while (i < l) {
            if (bdr[i].IdCamp === t.IdCamp) {
              bdr[i].Modif = (bdr[i].Modif + "\n ----- * ----- \n" + t.Modif).trim();
              bdr[i].Date = (bdr[i].Date + "\n" + t.Date).trim();
              trouve = true;
              break;
            }
            i++;
          }
          if (!trouve) {
            bdr.push({
              foo: 0
            });
            angular.copy(t, bdr[l]);
          }
        }
      }
      return bdr;
    };
    $$.aff_bid = function() {
      var k, len, len1, m, md, ref, ref1;
      parentScope.bid.show = !parentScope.bid.show;
      if (!(parentScope.mdf.show || parentScope.bid.show)) {
        parentScope.mdf.show_one_cmp = false;
      }
      if ($$.psc.bid.show) {
        if ($$.bid.bd == null) {
          $$.bid.bd = get_bid();
          $$.bid.bd_reduits = get_bid_reduits($$.bid.bd);
        } else if ($$.bid.bd.length === 0) {
          $$.bid.bd = get_bid();
          $$.bid.bd_reduits = get_bid_reduits($$.bid.bd);
        }
        $$.psc.show_menu = false;
        $$.psc.bazinga_scroll("id_section_xy", $$.psc.bzg.bid_xy);
      } else {
        $$.bid.chk_aff_xy = false;
        $$.modifs.chk_aff_xy = false;
        ref = $$.bid.bd;
        for (k = 0, len = ref.length; k < len; k++) {
          md = ref[k];
          if (md.shw_id !== 'no') {
            md.shw_id = 'no';
          }
        }
        ref1 = $$.bid.bd_reduits;
        for (m = 0, len1 = ref1.length; m < len1; m++) {
          md = ref1[m];
          if (md.shw_id !== 'no') {
            md.shw_id = 'no';
          }
        }
        if (!parentScope.mdf.show && !parentScope.bid.show) {
          parentScope.rdio_action = "70";
        }
      }
      if ($$.modifs.bd == null) {
        $$.modifs.bd = get_modifs();
        $$.modifs.bd_reduits = get_modifs_reduits($$.modifs.bd);
      }
      parentScope.mdf.bd = $$.modifs.bd;
      parentScope.mdf.bd_reduits = $$.modifs.bd_reduits;
      parentScope.bid.bd = $$.bid.bd;
      parentScope.bid.bd_reduits = $$.bid.bd_reduits;
      return parentScope.chk_bid_click(true);
    };
    return $$.clc_change_lgs = function(shw_lgs) {
      $$.logs.chk.xy = shw_lgs;
      parentScope.logs.chk.xy = shw_lgs;
      parentScope.bd_graph2 = $$.bd_graph2;
      return parentScope.$apply();
    };
  });

  return;

}).call(this);

//# sourceMappingURL=02_ctl_graph.js.map
